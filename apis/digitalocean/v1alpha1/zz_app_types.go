/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AlertInitParameters struct {

	// Determines whether or not the alert is disabled (default: false).
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`
}

type AlertObservation struct {

	// Determines whether or not the alert is disabled (default: false).
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`
}

type AlertParameters struct {

	// Determines whether or not the alert is disabled (default: false).
	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	// +kubebuilder:validation:Optional
	Rule *string `json:"rule" tf:"rule,omitempty"`
}

type AllowOriginsInitParameters struct {

	// The Access-Control-Allow-Origin header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	// Exact string match.
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// Prefix-based match.
	// Prefix-based match.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Access-Control-Allow-Origin header will be set to the client's origin if the client’s origin matches the regex you provide, in RE2 style syntax.
	// RE2 style regex-based match.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type AllowOriginsObservation struct {

	// The Access-Control-Allow-Origin header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	// Exact string match.
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// Prefix-based match.
	// Prefix-based match.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Access-Control-Allow-Origin header will be set to the client's origin if the client’s origin matches the regex you provide, in RE2 style syntax.
	// RE2 style regex-based match.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type AllowOriginsParameters struct {

	// The Access-Control-Allow-Origin header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	// Exact string match.
	// +kubebuilder:validation:Optional
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// Prefix-based match.
	// Prefix-based match.
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Access-Control-Allow-Origin header will be set to the client's origin if the client’s origin matches the regex you provide, in RE2 style syntax.
	// RE2 style regex-based match.
	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type AppInitParameters struct {

	// The dedicated egress IP addresses associated with the app.
	DedicatedIps []DedicatedIpsInitParameters `json:"dedicatedIps,omitempty" tf:"dedicated_ips,omitempty"`

	// The ID of the project that the app is assigned to.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-digitalocean/apis/project/v1alpha1.Project
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// A DigitalOcean App spec describing the app.
	// A DigitalOcean App Platform Spec
	Spec []SpecInitParameters `json:"spec,omitempty" tf:"spec,omitempty"`
}

type AppObservation struct {

	// The ID the app's currently active deployment.
	// The ID the App's currently active deployment
	ActiveDeploymentID *string `json:"activeDeploymentId,omitempty" tf:"active_deployment_id,omitempty"`

	// The date and time of when the app was created.
	// The date and time of when the App was created
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// The dedicated egress IP addresses associated with the app.
	DedicatedIps []DedicatedIpsObservation `json:"dedicatedIps,omitempty" tf:"dedicated_ips,omitempty"`

	// The default URL to access the app.
	// The default URL to access the App
	DefaultIngress *string `json:"defaultIngress,omitempty" tf:"default_ingress,omitempty"`

	// The ID of the app.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The live domain of the app.
	LiveDomain *string `json:"liveDomain,omitempty" tf:"live_domain,omitempty"`

	// The live URL of the app.
	LiveURL *string `json:"liveUrl,omitempty" tf:"live_url,omitempty"`

	// The ID of the project that the app is assigned to.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// A DigitalOcean App spec describing the app.
	// A DigitalOcean App Platform Spec
	Spec []SpecObservation `json:"spec,omitempty" tf:"spec,omitempty"`

	// The date and time of when the app was last updated.
	// The date and time of when the App was last updated
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// The uniform resource identifier for the app.
	// The uniform resource identifier for the app
	Urn *string `json:"urn,omitempty" tf:"urn,omitempty"`
}

type AppParameters struct {

	// The dedicated egress IP addresses associated with the app.
	// +kubebuilder:validation:Optional
	DedicatedIps []DedicatedIpsParameters `json:"dedicatedIps,omitempty" tf:"dedicated_ips,omitempty"`

	// The ID of the project that the app is assigned to.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-digitalocean/apis/project/v1alpha1.Project
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// A DigitalOcean App spec describing the app.
	// A DigitalOcean App Platform Spec
	// +kubebuilder:validation:Optional
	Spec []SpecParameters `json:"spec,omitempty" tf:"spec,omitempty"`
}

type AutoscalingInitParameters struct {

	// The maximum amount of instances for this component. Must be more than min_instance_count.
	// The maximum amount of instances for this component. Must be more than min_instance_count.
	MaxInstanceCount *float64 `json:"maxInstanceCount,omitempty" tf:"max_instance_count,omitempty"`

	// The metrics that the component is scaled on.
	// The metrics that the component is scaled on.
	Metrics []MetricsInitParameters `json:"metrics,omitempty" tf:"metrics,omitempty"`

	// The minimum amount of instances for this component. Must be less than max_instance_count.
	// The minimum amount of instances for this component. Must be less than max_instance_count.
	MinInstanceCount *float64 `json:"minInstanceCount,omitempty" tf:"min_instance_count,omitempty"`
}

type AutoscalingObservation struct {

	// The maximum amount of instances for this component. Must be more than min_instance_count.
	// The maximum amount of instances for this component. Must be more than min_instance_count.
	MaxInstanceCount *float64 `json:"maxInstanceCount,omitempty" tf:"max_instance_count,omitempty"`

	// The metrics that the component is scaled on.
	// The metrics that the component is scaled on.
	Metrics []MetricsObservation `json:"metrics,omitempty" tf:"metrics,omitempty"`

	// The minimum amount of instances for this component. Must be less than max_instance_count.
	// The minimum amount of instances for this component. Must be less than max_instance_count.
	MinInstanceCount *float64 `json:"minInstanceCount,omitempty" tf:"min_instance_count,omitempty"`
}

type AutoscalingParameters struct {

	// The maximum amount of instances for this component. Must be more than min_instance_count.
	// The maximum amount of instances for this component. Must be more than min_instance_count.
	// +kubebuilder:validation:Optional
	MaxInstanceCount *float64 `json:"maxInstanceCount" tf:"max_instance_count,omitempty"`

	// The metrics that the component is scaled on.
	// The metrics that the component is scaled on.
	// +kubebuilder:validation:Optional
	Metrics []MetricsParameters `json:"metrics" tf:"metrics,omitempty"`

	// The minimum amount of instances for this component. Must be less than max_instance_count.
	// The minimum amount of instances for this component. Must be less than max_instance_count.
	// +kubebuilder:validation:Optional
	MinInstanceCount *float64 `json:"minInstanceCount" tf:"min_instance_count,omitempty"`
}

type BasicAuthInitParameters struct {

	// Password for user defined in User. Is required when endpoint is set. Cannot be set if using a DigitalOcean DBaaS OpenSearch cluster.
	// Password for basic authentication.
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Username to authenticate with. Only required when endpoint is set. Defaults to doadmin when cluster_name is set.
	// user for basic authentication.
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type BasicAuthObservation struct {

	// Username to authenticate with. Only required when endpoint is set. Defaults to doadmin when cluster_name is set.
	// user for basic authentication.
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type BasicAuthParameters struct {

	// Password for user defined in User. Is required when endpoint is set. Cannot be set if using a DigitalOcean DBaaS OpenSearch cluster.
	// Password for basic authentication.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Username to authenticate with. Only required when endpoint is set. Defaults to doadmin when cluster_name is set.
	// user for basic authentication.
	// +kubebuilder:validation:Optional
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type CPUInitParameters struct {

	// The average target CPU utilization for the component.
	// The average target CPU utilization for the component.
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`
}

type CPUObservation struct {

	// The average target CPU utilization for the component.
	// The average target CPU utilization for the component.
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`
}

type CPUParameters struct {

	// The average target CPU utilization for the component.
	// The average target CPU utilization for the component.
	// +kubebuilder:validation:Optional
	Percent *float64 `json:"percent" tf:"percent,omitempty"`
}

type ComponentInitParameters struct {

	// The name of the app. Must be unique across all apps in the same account.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An optional boolean flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component.
	PreservePathPrefix *bool `json:"preservePathPrefix,omitempty" tf:"preserve_path_prefix,omitempty"`

	// An optional field that will rewrite the path of the component to be what is specified here. This is mutually exclusive with preserve_path_prefix.
	Rewrite *string `json:"rewrite,omitempty" tf:"rewrite,omitempty"`
}

type ComponentObservation struct {

	// The name of the app. Must be unique across all apps in the same account.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An optional boolean flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component.
	PreservePathPrefix *bool `json:"preservePathPrefix,omitempty" tf:"preserve_path_prefix,omitempty"`

	// An optional field that will rewrite the path of the component to be what is specified here. This is mutually exclusive with preserve_path_prefix.
	Rewrite *string `json:"rewrite,omitempty" tf:"rewrite,omitempty"`
}

type ComponentParameters struct {

	// The name of the app. Must be unique across all apps in the same account.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An optional boolean flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component.
	// +kubebuilder:validation:Optional
	PreservePathPrefix *bool `json:"preservePathPrefix,omitempty" tf:"preserve_path_prefix,omitempty"`

	// An optional field that will rewrite the path of the component to be what is specified here. This is mutually exclusive with preserve_path_prefix.
	// +kubebuilder:validation:Optional
	Rewrite *string `json:"rewrite,omitempty" tf:"rewrite,omitempty"`
}

type CorsAllowOriginsInitParameters struct {

	// The Access-Control-Allow-Origin header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	// Exact string match.
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// Prefix-based match.
	// Prefix-based match.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Access-Control-Allow-Origin header will be set to the client's origin if the client’s origin matches the regex you provide, in RE2 style syntax.
	// RE2 style regex-based match.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type CorsAllowOriginsObservation struct {

	// The Access-Control-Allow-Origin header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	// Exact string match.
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// Prefix-based match.
	// Prefix-based match.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Access-Control-Allow-Origin header will be set to the client's origin if the client’s origin matches the regex you provide, in RE2 style syntax.
	// RE2 style regex-based match.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type CorsAllowOriginsParameters struct {

	// The Access-Control-Allow-Origin header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	// Exact string match.
	// +kubebuilder:validation:Optional
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// Prefix-based match.
	// Prefix-based match.
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Access-Control-Allow-Origin header will be set to the client's origin if the client’s origin matches the regex you provide, in RE2 style syntax.
	// RE2 style regex-based match.
	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type CorsInitParameters struct {

	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is include. This configures the Access-Control-Allow-Credentials header.
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is `include`. This configures the Access-Control-Allow-Credentials header.
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// +listType=set
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// +listType=set
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The Access-Control-Allow-Origin can be
	// The set of allowed CORS origins. This configures the Access-Control-Allow-Origin header.
	AllowOrigins []AllowOriginsInitParameters `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// +listType=set
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: 5h30m.
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type CorsObservation struct {

	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is include. This configures the Access-Control-Allow-Credentials header.
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is `include`. This configures the Access-Control-Allow-Credentials header.
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// +listType=set
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// +listType=set
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The Access-Control-Allow-Origin can be
	// The set of allowed CORS origins. This configures the Access-Control-Allow-Origin header.
	AllowOrigins []AllowOriginsObservation `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// +listType=set
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: 5h30m.
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type CorsParameters struct {

	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is include. This configures the Access-Control-Allow-Credentials header.
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is `include`. This configures the Access-Control-Allow-Credentials header.
	// +kubebuilder:validation:Optional
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// +kubebuilder:validation:Optional
	// +listType=set
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// +kubebuilder:validation:Optional
	// +listType=set
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The Access-Control-Allow-Origin can be
	// The set of allowed CORS origins. This configures the Access-Control-Allow-Origin header.
	// +kubebuilder:validation:Optional
	AllowOrigins []AllowOriginsParameters `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// +kubebuilder:validation:Optional
	// +listType=set
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: 5h30m.
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	// +kubebuilder:validation:Optional
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type DatabaseInitParameters struct {

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if cluster_name is not set, a new cluster will be provisioned.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// The name of the MySQL or PostgreSQL database to configure.
	// The name of the MySQL or PostgreSQL database to configure.
	DBName *string `json:"dbName,omitempty" tf:"db_name,omitempty"`

	// The name of the MySQL or PostgreSQL user to configure.
	// The name of the MySQL or PostgreSQL user to configure.
	DBUser *string `json:"dbUser,omitempty" tf:"db_user,omitempty"`

	// The database engine to use (MYSQL, PG, REDIS, MONGODB, KAFKA, or OPENSEARCH).
	// The database engine to use.
	Engine *string `json:"engine,omitempty" tf:"engine,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Whether this is a production or dev database.
	// Whether this is a production or dev database.
	Production *bool `json:"production,omitempty" tf:"production,omitempty"`

	// The version of the database engine.
	// The version of the database engine.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DatabaseObservation struct {

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if cluster_name is not set, a new cluster will be provisioned.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// The name of the MySQL or PostgreSQL database to configure.
	// The name of the MySQL or PostgreSQL database to configure.
	DBName *string `json:"dbName,omitempty" tf:"db_name,omitempty"`

	// The name of the MySQL or PostgreSQL user to configure.
	// The name of the MySQL or PostgreSQL user to configure.
	DBUser *string `json:"dbUser,omitempty" tf:"db_user,omitempty"`

	// The database engine to use (MYSQL, PG, REDIS, MONGODB, KAFKA, or OPENSEARCH).
	// The database engine to use.
	Engine *string `json:"engine,omitempty" tf:"engine,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Whether this is a production or dev database.
	// Whether this is a production or dev database.
	Production *bool `json:"production,omitempty" tf:"production,omitempty"`

	// The version of the database engine.
	// The version of the database engine.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DatabaseParameters struct {

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if cluster_name is not set, a new cluster will be provisioned.
	// +kubebuilder:validation:Optional
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// The name of the MySQL or PostgreSQL database to configure.
	// The name of the MySQL or PostgreSQL database to configure.
	// +kubebuilder:validation:Optional
	DBName *string `json:"dbName,omitempty" tf:"db_name,omitempty"`

	// The name of the MySQL or PostgreSQL user to configure.
	// The name of the MySQL or PostgreSQL user to configure.
	// +kubebuilder:validation:Optional
	DBUser *string `json:"dbUser,omitempty" tf:"db_user,omitempty"`

	// The database engine to use (MYSQL, PG, REDIS, MONGODB, KAFKA, or OPENSEARCH).
	// The database engine to use.
	// +kubebuilder:validation:Optional
	Engine *string `json:"engine,omitempty" tf:"engine,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Whether this is a production or dev database.
	// Whether this is a production or dev database.
	// +kubebuilder:validation:Optional
	Production *bool `json:"production,omitempty" tf:"production,omitempty"`

	// The version of the database engine.
	// The version of the database engine.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DatadogInitParameters struct {

	// Datadog API key.
	// Datadog API key.
	APIKey *string `json:"apiKey,omitempty" tf:"api_key,omitempty"`

	// Papertrail syslog endpoint.
	// Datadog HTTP log intake endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type DatadogObservation struct {

	// Datadog API key.
	// Datadog API key.
	APIKey *string `json:"apiKey,omitempty" tf:"api_key,omitempty"`

	// Papertrail syslog endpoint.
	// Datadog HTTP log intake endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type DatadogParameters struct {

	// Datadog API key.
	// Datadog API key.
	// +kubebuilder:validation:Optional
	APIKey *string `json:"apiKey" tf:"api_key,omitempty"`

	// Papertrail syslog endpoint.
	// Datadog HTTP log intake endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type DedicatedIpsInitParameters struct {

	// The ID of the app.
	// The ID of the dedicated egress IP.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The IP address of the dedicated egress IP.
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// The status of the dedicated egress IP: 'UNKNOWN', 'ASSIGNING', 'ASSIGNED', or 'REMOVED'
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type DedicatedIpsObservation struct {

	// The ID of the app.
	// The ID of the dedicated egress IP.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The IP address of the dedicated egress IP.
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// The status of the dedicated egress IP: 'UNKNOWN', 'ASSIGNING', 'ASSIGNED', or 'REMOVED'
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type DedicatedIpsParameters struct {

	// The ID of the app.
	// The ID of the dedicated egress IP.
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The IP address of the dedicated egress IP.
	// +kubebuilder:validation:Optional
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// The status of the dedicated egress IP: 'UNKNOWN', 'ASSIGNING', 'ASSIGNED', or 'REMOVED'
	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type DeployOnPushInitParameters struct {

	// Whether to automatically deploy images pushed to DOCR.
	// Whether to automatically deploy images pushed to DOCR.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type DeployOnPushObservation struct {

	// Whether to automatically deploy images pushed to DOCR.
	// Whether to automatically deploy images pushed to DOCR.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type DeployOnPushParameters struct {

	// Whether to automatically deploy images pushed to DOCR.
	// Whether to automatically deploy images pushed to DOCR.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type DomainInitParameters struct {

	// The name of the app. Must be unique across all apps in the same account.
	// The hostname for the domain.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the domain.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// A boolean indicating whether the domain includes all sub-domains, in addition to the given domain.
	// Indicates whether the domain includes all sub-domains, in addition to the given domain.
	Wildcard *bool `json:"wildcard,omitempty" tf:"wildcard,omitempty"`

	// If the domain uses DigitalOcean DNS and you would like App Platform to automatically manage it for you, set this to the name of the domain on your account.
	// If the domain uses DigitalOcean DNS and you would like App Platform to automatically manage it for you, set this to the name of the domain on your account.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type DomainObservation struct {

	// The name of the app. Must be unique across all apps in the same account.
	// The hostname for the domain.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the domain.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// A boolean indicating whether the domain includes all sub-domains, in addition to the given domain.
	// Indicates whether the domain includes all sub-domains, in addition to the given domain.
	Wildcard *bool `json:"wildcard,omitempty" tf:"wildcard,omitempty"`

	// If the domain uses DigitalOcean DNS and you would like App Platform to automatically manage it for you, set this to the name of the domain on your account.
	// If the domain uses DigitalOcean DNS and you would like App Platform to automatically manage it for you, set this to the name of the domain on your account.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type DomainParameters struct {

	// The name of the app. Must be unique across all apps in the same account.
	// The hostname for the domain.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the domain.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// A boolean indicating whether the domain includes all sub-domains, in addition to the given domain.
	// Indicates whether the domain includes all sub-domains, in addition to the given domain.
	// +kubebuilder:validation:Optional
	Wildcard *bool `json:"wildcard,omitempty" tf:"wildcard,omitempty"`

	// If the domain uses DigitalOcean DNS and you would like App Platform to automatically manage it for you, set this to the name of the domain on your account.
	// If the domain uses DigitalOcean DNS and you would like App Platform to automatically manage it for you, set this to the name of the domain on your account.
	// +kubebuilder:validation:Optional
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type EgressInitParameters struct {

	// The domain type, which can be one of the following:
	// The app egress type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type EgressObservation struct {

	// The domain type, which can be one of the following:
	// The app egress type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type EgressParameters struct {

	// The domain type, which can be one of the following:
	// The app egress type.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type EnvInitParameters struct {

	// The name of the environment variable.
	// The name of the environment variable.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value of the environment variable.
	// The value of the environment variable.
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type EnvObservation struct {

	// The name of the environment variable.
	// The name of the environment variable.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type EnvParameters struct {

	// The name of the environment variable.
	// The name of the environment variable.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value of the environment variable.
	// The value of the environment variable.
	// +kubebuilder:validation:Optional
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type FunctionAlertInitParameters struct {

	// Determines whether or not the alert is disabled (default: false).
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The operator to use. This is either of GREATER_THAN or LESS_THAN.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// The value of the environment variable.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// The time before alerts should be triggered. This is may be one of: FIVE_MINUTES, TEN_MINUTES, THIRTY_MINUTES, ONE_HOUR.
	Window *string `json:"window,omitempty" tf:"window,omitempty"`
}

type FunctionAlertObservation struct {

	// Determines whether or not the alert is disabled (default: false).
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The operator to use. This is either of GREATER_THAN or LESS_THAN.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// The value of the environment variable.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// The time before alerts should be triggered. This is may be one of: FIVE_MINUTES, TEN_MINUTES, THIRTY_MINUTES, ONE_HOUR.
	Window *string `json:"window,omitempty" tf:"window,omitempty"`
}

type FunctionAlertParameters struct {

	// Determines whether or not the alert is disabled (default: false).
	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The operator to use. This is either of GREATER_THAN or LESS_THAN.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	// +kubebuilder:validation:Optional
	Rule *string `json:"rule" tf:"rule,omitempty"`

	// The value of the environment variable.
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`

	// The time before alerts should be triggered. This is may be one of: FIVE_MINUTES, TEN_MINUTES, THIRTY_MINUTES, ONE_HOUR.
	// +kubebuilder:validation:Optional
	Window *string `json:"window" tf:"window,omitempty"`
}

type FunctionEnvInitParameters struct {

	// The name of the environment variable.
	// The name of the environment variable.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value of the environment variable.
	// The value of the environment variable.
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type FunctionEnvObservation struct {

	// The name of the environment variable.
	// The name of the environment variable.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FunctionEnvParameters struct {

	// The name of the environment variable.
	// The name of the environment variable.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value of the environment variable.
	// The value of the environment variable.
	// +kubebuilder:validation:Optional
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type FunctionInitParameters struct {

	// Describes an alert policy for the app.
	// Alert policies for the app component
	Alert []FunctionAlertInitParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	// The CORS policies of the app.
	Cors []CorsInitParameters `json:"cors,omitempty" tf:"cors,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	Env []FunctionEnvInitParameters `json:"env,omitempty" tf:"env,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	Git []GitInitParameters `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Github []GithubInitParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Gitlab []GitlabInitParameters `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// Describes a log forwarding destination.
	// Logs
	LogDestination []LogDestinationInitParameters `json:"logDestination,omitempty" tf:"log_destination,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Deprecated - use ingress) An HTTP paths that should be routed to this component.
	Routes []RoutesInitParameters `json:"routes,omitempty" tf:"routes,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type FunctionObservation struct {

	// Describes an alert policy for the app.
	// Alert policies for the app component
	Alert []FunctionAlertObservation `json:"alert,omitempty" tf:"alert,omitempty"`

	// The CORS policies of the app.
	Cors []CorsObservation `json:"cors,omitempty" tf:"cors,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	Env []FunctionEnvObservation `json:"env,omitempty" tf:"env,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	Git []GitObservation `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Github []GithubObservation `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Gitlab []GitlabObservation `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// Describes a log forwarding destination.
	// Logs
	LogDestination []LogDestinationObservation `json:"logDestination,omitempty" tf:"log_destination,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Deprecated - use ingress) An HTTP paths that should be routed to this component.
	Routes []RoutesObservation `json:"routes,omitempty" tf:"routes,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type FunctionParameters struct {

	// Describes an alert policy for the app.
	// Alert policies for the app component
	// +kubebuilder:validation:Optional
	Alert []FunctionAlertParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	// The CORS policies of the app.
	// +kubebuilder:validation:Optional
	Cors []CorsParameters `json:"cors,omitempty" tf:"cors,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	// +kubebuilder:validation:Optional
	Env []FunctionEnvParameters `json:"env,omitempty" tf:"env,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	// +kubebuilder:validation:Optional
	Git []GitParameters `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Github []GithubParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Gitlab []GitlabParameters `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// Describes a log forwarding destination.
	// Logs
	// +kubebuilder:validation:Optional
	LogDestination []LogDestinationParameters `json:"logDestination,omitempty" tf:"log_destination,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (Deprecated - use ingress) An HTTP paths that should be routed to this component.
	// +kubebuilder:validation:Optional
	Routes []RoutesParameters `json:"routes,omitempty" tf:"routes,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	// +kubebuilder:validation:Optional
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type GitInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type GitObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type GitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	// +kubebuilder:validation:Optional
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type GithubInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type GithubObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type GithubParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	// +kubebuilder:validation:Optional
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type GitlabInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type GitlabObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type GitlabParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	// +kubebuilder:validation:Optional
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type HealthCheckInitParameters struct {

	// The number of failed health checks before considered unhealthy.
	// The number of failed health checks before considered unhealthy.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// The route path used for the HTTP health check ping.
	// The route path used for the HTTP health check ping.
	HTTPPath *string `json:"httpPath,omitempty" tf:"http_path,omitempty"`

	// The number of seconds to wait before beginning health checks.
	// The number of seconds to wait before beginning health checks.
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// The number of seconds to wait between health checks.
	// The number of seconds to wait between health checks.
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// The port to redirect to.
	// The port on which the health check will be performed. If not set, the health check will be performed on the component's http_port.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The number of successful health checks before considered healthy.
	// The number of successful health checks before considered healthy.
	SuccessThreshold *float64 `json:"successThreshold,omitempty" tf:"success_threshold,omitempty"`

	// The number of seconds after which the check times out.
	// The number of seconds after which the check times out.
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type HealthCheckObservation struct {

	// The number of failed health checks before considered unhealthy.
	// The number of failed health checks before considered unhealthy.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// The route path used for the HTTP health check ping.
	// The route path used for the HTTP health check ping.
	HTTPPath *string `json:"httpPath,omitempty" tf:"http_path,omitempty"`

	// The number of seconds to wait before beginning health checks.
	// The number of seconds to wait before beginning health checks.
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// The number of seconds to wait between health checks.
	// The number of seconds to wait between health checks.
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// The port to redirect to.
	// The port on which the health check will be performed. If not set, the health check will be performed on the component's http_port.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The number of successful health checks before considered healthy.
	// The number of successful health checks before considered healthy.
	SuccessThreshold *float64 `json:"successThreshold,omitempty" tf:"success_threshold,omitempty"`

	// The number of seconds after which the check times out.
	// The number of seconds after which the check times out.
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type HealthCheckParameters struct {

	// The number of failed health checks before considered unhealthy.
	// The number of failed health checks before considered unhealthy.
	// +kubebuilder:validation:Optional
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// The route path used for the HTTP health check ping.
	// The route path used for the HTTP health check ping.
	// +kubebuilder:validation:Optional
	HTTPPath *string `json:"httpPath,omitempty" tf:"http_path,omitempty"`

	// The number of seconds to wait before beginning health checks.
	// The number of seconds to wait before beginning health checks.
	// +kubebuilder:validation:Optional
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// The number of seconds to wait between health checks.
	// The number of seconds to wait between health checks.
	// +kubebuilder:validation:Optional
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// The port to redirect to.
	// The port on which the health check will be performed. If not set, the health check will be performed on the component's http_port.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The number of successful health checks before considered healthy.
	// The number of successful health checks before considered healthy.
	// +kubebuilder:validation:Optional
	SuccessThreshold *float64 `json:"successThreshold,omitempty" tf:"success_threshold,omitempty"`

	// The number of seconds after which the check times out.
	// The number of seconds after which the check times out.
	// +kubebuilder:validation:Optional
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type ImageDeployOnPushInitParameters struct {

	// Whether to automatically deploy images pushed to DOCR.
	// Whether to automatically deploy images pushed to DOCR.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ImageDeployOnPushObservation struct {

	// Whether to automatically deploy images pushed to DOCR.
	// Whether to automatically deploy images pushed to DOCR.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ImageDeployOnPushParameters struct {

	// Whether to automatically deploy images pushed to DOCR.
	// Whether to automatically deploy images pushed to DOCR.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ImageInitParameters struct {

	// Whether to automatically deploy new commits made to the repo.
	// Configures automatically deploying images pushed to DOCR.
	DeployOnPush []DeployOnPushInitParameters `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The registry name. Must be left empty for the DOCR registry type. Required for the DOCKER_HUB registry type.
	// The registry name. Must be left empty for the DOCR registry type.
	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	// The credentials required to access a private Docker Hub or GitHub registry, in the following syntax <username>:<token>.
	// Access credentials for third-party registries
	RegistryCredentialsSecretRef *v1.SecretKeySelector `json:"registryCredentialsSecretRef,omitempty" tf:"-"`

	// The registry type. One of DOCR (DigitalOcean container registry) or DOCKER_HUB.
	// The registry type.
	RegistryType *string `json:"registryType,omitempty" tf:"registry_type,omitempty"`

	// The repository name.
	// The repository name.
	Repository *string `json:"repository,omitempty" tf:"repository,omitempty"`

	// The repository tag. Defaults to latest if not provided.
	// The repository tag. Defaults to latest if not provided.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ImageObservation struct {

	// Whether to automatically deploy new commits made to the repo.
	// Configures automatically deploying images pushed to DOCR.
	DeployOnPush []DeployOnPushObservation `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The registry name. Must be left empty for the DOCR registry type. Required for the DOCKER_HUB registry type.
	// The registry name. Must be left empty for the DOCR registry type.
	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	// The registry type. One of DOCR (DigitalOcean container registry) or DOCKER_HUB.
	// The registry type.
	RegistryType *string `json:"registryType,omitempty" tf:"registry_type,omitempty"`

	// The repository name.
	// The repository name.
	Repository *string `json:"repository,omitempty" tf:"repository,omitempty"`

	// The repository tag. Defaults to latest if not provided.
	// The repository tag. Defaults to latest if not provided.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ImageParameters struct {

	// Whether to automatically deploy new commits made to the repo.
	// Configures automatically deploying images pushed to DOCR.
	// +kubebuilder:validation:Optional
	DeployOnPush []DeployOnPushParameters `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The registry name. Must be left empty for the DOCR registry type. Required for the DOCKER_HUB registry type.
	// The registry name. Must be left empty for the DOCR registry type.
	// +kubebuilder:validation:Optional
	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	// The credentials required to access a private Docker Hub or GitHub registry, in the following syntax <username>:<token>.
	// Access credentials for third-party registries
	// +kubebuilder:validation:Optional
	RegistryCredentialsSecretRef *v1.SecretKeySelector `json:"registryCredentialsSecretRef,omitempty" tf:"-"`

	// The registry type. One of DOCR (DigitalOcean container registry) or DOCKER_HUB.
	// The registry type.
	// +kubebuilder:validation:Optional
	RegistryType *string `json:"registryType" tf:"registry_type,omitempty"`

	// The repository name.
	// The repository name.
	// +kubebuilder:validation:Optional
	Repository *string `json:"repository" tf:"repository,omitempty"`

	// The repository tag. Defaults to latest if not provided.
	// The repository tag. Defaults to latest if not provided.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type IngressInitParameters struct {

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	Rule []RuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type IngressObservation struct {

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	Rule []RuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`
}

type IngressParameters struct {

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	// +kubebuilder:validation:Optional
	Rule []RuleParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type JobAlertInitParameters struct {

	// Determines whether or not the alert is disabled (default: false).
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The operator to use. This is either of GREATER_THAN or LESS_THAN.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// The value of the environment variable.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// The time before alerts should be triggered. This is may be one of: FIVE_MINUTES, TEN_MINUTES, THIRTY_MINUTES, ONE_HOUR.
	Window *string `json:"window,omitempty" tf:"window,omitempty"`
}

type JobAlertObservation struct {

	// Determines whether or not the alert is disabled (default: false).
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The operator to use. This is either of GREATER_THAN or LESS_THAN.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// The value of the environment variable.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// The time before alerts should be triggered. This is may be one of: FIVE_MINUTES, TEN_MINUTES, THIRTY_MINUTES, ONE_HOUR.
	Window *string `json:"window,omitempty" tf:"window,omitempty"`
}

type JobAlertParameters struct {

	// Determines whether or not the alert is disabled (default: false).
	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The operator to use. This is either of GREATER_THAN or LESS_THAN.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	// +kubebuilder:validation:Optional
	Rule *string `json:"rule" tf:"rule,omitempty"`

	// The value of the environment variable.
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`

	// The time before alerts should be triggered. This is may be one of: FIVE_MINUTES, TEN_MINUTES, THIRTY_MINUTES, ONE_HOUR.
	// +kubebuilder:validation:Optional
	Window *string `json:"window" tf:"window,omitempty"`
}

type JobEnvInitParameters struct {

	// The name of the environment variable.
	// The name of the environment variable.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value of the environment variable.
	// The value of the environment variable.
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type JobEnvObservation struct {

	// The name of the environment variable.
	// The name of the environment variable.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type JobEnvParameters struct {

	// The name of the environment variable.
	// The name of the environment variable.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value of the environment variable.
	// The value of the environment variable.
	// +kubebuilder:validation:Optional
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type JobGitInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type JobGitObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type JobGitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	// +kubebuilder:validation:Optional
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type JobGithubInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobGithubObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobGithubParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	// +kubebuilder:validation:Optional
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobGitlabInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobGitlabObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobGitlabParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	// +kubebuilder:validation:Optional
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type JobInitParameters struct {

	// Describes an alert policy for the app.
	// Alert policies for the app component
	Alert []JobAlertInitParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	// An optional build command to run while building this component from source.
	// An optional build command to run while building this component from source.
	BuildCommand *string `json:"buildCommand,omitempty" tf:"build_command,omitempty"`

	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `json:"dockerfilePath,omitempty" tf:"dockerfile_path,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	Env []JobEnvInitParameters `json:"env,omitempty" tf:"env,omitempty"`

	// An environment slug describing the type of this app.
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `json:"environmentSlug,omitempty" tf:"environment_slug,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	Git []JobGitInitParameters `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Github []JobGithubInitParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Gitlab []JobGitlabInitParameters `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// An image to use as the component's source. Only one of git, github, gitlab, or image may be set.
	Image []ImageInitParameters `json:"image,omitempty" tf:"image,omitempty"`

	// The amount of instances that this component should be scaled to.
	// The amount of instances that this component should be scaled to.
	InstanceCount *float64 `json:"instanceCount,omitempty" tf:"instance_count,omitempty"`

	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be found with the API or using the doctl CLI (doctl apps tier instance-size list). Default: basic-xxs
	// The instance size to use for this component.
	InstanceSizeSlug *string `json:"instanceSizeSlug,omitempty" tf:"instance_size_slug,omitempty"`

	// The type of job and when it will be run during the deployment process. It may be one of:
	// The type of job and when it will be run during the deployment process.
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// Describes a log forwarding destination.
	// Logs
	LogDestination []JobLogDestinationInitParameters `json:"logDestination,omitempty" tf:"log_destination,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An optional run command to override the component's default.
	// An optional run command to override the component's default.
	RunCommand *string `json:"runCommand,omitempty" tf:"run_command,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type JobLogDestinationInitParameters struct {

	// Datadog configuration.
	// Datadog configuration.
	Datadog []LogDestinationDatadogInitParameters `json:"datadog,omitempty" tf:"datadog,omitempty"`

	// Logtail configuration.
	// Logtail configuration.
	Logtail []LogDestinationLogtailInitParameters `json:"logtail,omitempty" tf:"logtail,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// Name of the log destination
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// OpenSearch configuration.
	OpenSearch []LogDestinationOpenSearchInitParameters `json:"openSearch,omitempty" tf:"open_search,omitempty"`

	// Papertrail configuration.
	// Papertrail configuration.
	Papertrail []LogDestinationPapertrailInitParameters `json:"papertrail,omitempty" tf:"papertrail,omitempty"`
}

type JobLogDestinationObservation struct {

	// Datadog configuration.
	// Datadog configuration.
	Datadog []LogDestinationDatadogObservation `json:"datadog,omitempty" tf:"datadog,omitempty"`

	// Logtail configuration.
	// Logtail configuration.
	Logtail []LogDestinationLogtailObservation `json:"logtail,omitempty" tf:"logtail,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// Name of the log destination
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// OpenSearch configuration.
	OpenSearch []LogDestinationOpenSearchObservation `json:"openSearch,omitempty" tf:"open_search,omitempty"`

	// Papertrail configuration.
	// Papertrail configuration.
	Papertrail []LogDestinationPapertrailObservation `json:"papertrail,omitempty" tf:"papertrail,omitempty"`
}

type JobLogDestinationParameters struct {

	// Datadog configuration.
	// Datadog configuration.
	// +kubebuilder:validation:Optional
	Datadog []LogDestinationDatadogParameters `json:"datadog,omitempty" tf:"datadog,omitempty"`

	// Logtail configuration.
	// Logtail configuration.
	// +kubebuilder:validation:Optional
	Logtail []LogDestinationLogtailParameters `json:"logtail,omitempty" tf:"logtail,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// Name of the log destination
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// OpenSearch configuration.
	// +kubebuilder:validation:Optional
	OpenSearch []LogDestinationOpenSearchParameters `json:"openSearch,omitempty" tf:"open_search,omitempty"`

	// Papertrail configuration.
	// Papertrail configuration.
	// +kubebuilder:validation:Optional
	Papertrail []LogDestinationPapertrailParameters `json:"papertrail,omitempty" tf:"papertrail,omitempty"`
}

type JobObservation struct {

	// Describes an alert policy for the app.
	// Alert policies for the app component
	Alert []JobAlertObservation `json:"alert,omitempty" tf:"alert,omitempty"`

	// An optional build command to run while building this component from source.
	// An optional build command to run while building this component from source.
	BuildCommand *string `json:"buildCommand,omitempty" tf:"build_command,omitempty"`

	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `json:"dockerfilePath,omitempty" tf:"dockerfile_path,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	Env []JobEnvObservation `json:"env,omitempty" tf:"env,omitempty"`

	// An environment slug describing the type of this app.
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `json:"environmentSlug,omitempty" tf:"environment_slug,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	Git []JobGitObservation `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Github []JobGithubObservation `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Gitlab []JobGitlabObservation `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// An image to use as the component's source. Only one of git, github, gitlab, or image may be set.
	Image []ImageObservation `json:"image,omitempty" tf:"image,omitempty"`

	// The amount of instances that this component should be scaled to.
	// The amount of instances that this component should be scaled to.
	InstanceCount *float64 `json:"instanceCount,omitempty" tf:"instance_count,omitempty"`

	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be found with the API or using the doctl CLI (doctl apps tier instance-size list). Default: basic-xxs
	// The instance size to use for this component.
	InstanceSizeSlug *string `json:"instanceSizeSlug,omitempty" tf:"instance_size_slug,omitempty"`

	// The type of job and when it will be run during the deployment process. It may be one of:
	// The type of job and when it will be run during the deployment process.
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// Describes a log forwarding destination.
	// Logs
	LogDestination []JobLogDestinationObservation `json:"logDestination,omitempty" tf:"log_destination,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An optional run command to override the component's default.
	// An optional run command to override the component's default.
	RunCommand *string `json:"runCommand,omitempty" tf:"run_command,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type JobParameters struct {

	// Describes an alert policy for the app.
	// Alert policies for the app component
	// +kubebuilder:validation:Optional
	Alert []JobAlertParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	// An optional build command to run while building this component from source.
	// An optional build command to run while building this component from source.
	// +kubebuilder:validation:Optional
	BuildCommand *string `json:"buildCommand,omitempty" tf:"build_command,omitempty"`

	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// +kubebuilder:validation:Optional
	DockerfilePath *string `json:"dockerfilePath,omitempty" tf:"dockerfile_path,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	// +kubebuilder:validation:Optional
	Env []JobEnvParameters `json:"env,omitempty" tf:"env,omitempty"`

	// An environment slug describing the type of this app.
	// An environment slug describing the type of this app.
	// +kubebuilder:validation:Optional
	EnvironmentSlug *string `json:"environmentSlug,omitempty" tf:"environment_slug,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	// +kubebuilder:validation:Optional
	Git []JobGitParameters `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Github []JobGithubParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Gitlab []JobGitlabParameters `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// An image to use as the component's source. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Image []ImageParameters `json:"image,omitempty" tf:"image,omitempty"`

	// The amount of instances that this component should be scaled to.
	// The amount of instances that this component should be scaled to.
	// +kubebuilder:validation:Optional
	InstanceCount *float64 `json:"instanceCount,omitempty" tf:"instance_count,omitempty"`

	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be found with the API or using the doctl CLI (doctl apps tier instance-size list). Default: basic-xxs
	// The instance size to use for this component.
	// +kubebuilder:validation:Optional
	InstanceSizeSlug *string `json:"instanceSizeSlug,omitempty" tf:"instance_size_slug,omitempty"`

	// The type of job and when it will be run during the deployment process. It may be one of:
	// The type of job and when it will be run during the deployment process.
	// +kubebuilder:validation:Optional
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// Describes a log forwarding destination.
	// Logs
	// +kubebuilder:validation:Optional
	LogDestination []JobLogDestinationParameters `json:"logDestination,omitempty" tf:"log_destination,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// An optional run command to override the component's default.
	// An optional run command to override the component's default.
	// +kubebuilder:validation:Optional
	RunCommand *string `json:"runCommand,omitempty" tf:"run_command,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	// +kubebuilder:validation:Optional
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type LogDestinationDatadogInitParameters struct {

	// Datadog API key.
	// Datadog API key.
	APIKey *string `json:"apiKey,omitempty" tf:"api_key,omitempty"`

	// Papertrail syslog endpoint.
	// Datadog HTTP log intake endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type LogDestinationDatadogObservation struct {

	// Datadog API key.
	// Datadog API key.
	APIKey *string `json:"apiKey,omitempty" tf:"api_key,omitempty"`

	// Papertrail syslog endpoint.
	// Datadog HTTP log intake endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type LogDestinationDatadogParameters struct {

	// Datadog API key.
	// Datadog API key.
	// +kubebuilder:validation:Optional
	APIKey *string `json:"apiKey" tf:"api_key,omitempty"`

	// Papertrail syslog endpoint.
	// Datadog HTTP log intake endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type LogDestinationInitParameters struct {

	// Datadog configuration.
	// Datadog configuration.
	Datadog []DatadogInitParameters `json:"datadog,omitempty" tf:"datadog,omitempty"`

	// Logtail configuration.
	// Logtail configuration.
	Logtail []LogtailInitParameters `json:"logtail,omitempty" tf:"logtail,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// Name of the log destination
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// OpenSearch configuration.
	OpenSearch []OpenSearchInitParameters `json:"openSearch,omitempty" tf:"open_search,omitempty"`

	// Papertrail configuration.
	// Papertrail configuration.
	Papertrail []PapertrailInitParameters `json:"papertrail,omitempty" tf:"papertrail,omitempty"`
}

type LogDestinationLogtailInitParameters struct {

	// Logtail token.
	// Logtail token.
	Token *string `json:"token,omitempty" tf:"token,omitempty"`
}

type LogDestinationLogtailObservation struct {

	// Logtail token.
	// Logtail token.
	Token *string `json:"token,omitempty" tf:"token,omitempty"`
}

type LogDestinationLogtailParameters struct {

	// Logtail token.
	// Logtail token.
	// +kubebuilder:validation:Optional
	Token *string `json:"token" tf:"token,omitempty"`
}

type LogDestinationObservation struct {

	// Datadog configuration.
	// Datadog configuration.
	Datadog []DatadogObservation `json:"datadog,omitempty" tf:"datadog,omitempty"`

	// Logtail configuration.
	// Logtail configuration.
	Logtail []LogtailObservation `json:"logtail,omitempty" tf:"logtail,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// Name of the log destination
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// OpenSearch configuration.
	OpenSearch []OpenSearchObservation `json:"openSearch,omitempty" tf:"open_search,omitempty"`

	// Papertrail configuration.
	// Papertrail configuration.
	Papertrail []PapertrailObservation `json:"papertrail,omitempty" tf:"papertrail,omitempty"`
}

type LogDestinationOpenSearchBasicAuthInitParameters struct {

	// Password for user defined in User. Is required when endpoint is set. Cannot be set if using a DigitalOcean DBaaS OpenSearch cluster.
	// Password for basic authentication.
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Username to authenticate with. Only required when endpoint is set. Defaults to doadmin when cluster_name is set.
	// user for basic authentication.
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type LogDestinationOpenSearchBasicAuthObservation struct {

	// Username to authenticate with. Only required when endpoint is set. Defaults to doadmin when cluster_name is set.
	// user for basic authentication.
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type LogDestinationOpenSearchBasicAuthParameters struct {

	// Password for user defined in User. Is required when endpoint is set. Cannot be set if using a DigitalOcean DBaaS OpenSearch cluster.
	// Password for basic authentication.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Username to authenticate with. Only required when endpoint is set. Defaults to doadmin when cluster_name is set.
	// user for basic authentication.
	// +kubebuilder:validation:Optional
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type LogDestinationOpenSearchInitParameters struct {

	// OpenSearch basic auth
	// Basic authentication details.
	BasicAuth []OpenSearchBasicAuthInitParameters `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// OpenSearch cluster name.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Papertrail syslog endpoint.
	// OpenSearch endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The index name to use for the logs. If not set, the default index name is logs.
	// OpenSearch index name.
	IndexName *string `json:"indexName,omitempty" tf:"index_name,omitempty"`
}

type LogDestinationOpenSearchObservation struct {

	// OpenSearch basic auth
	// Basic authentication details.
	BasicAuth []OpenSearchBasicAuthObservation `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// OpenSearch cluster name.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Papertrail syslog endpoint.
	// OpenSearch endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The index name to use for the logs. If not set, the default index name is logs.
	// OpenSearch index name.
	IndexName *string `json:"indexName,omitempty" tf:"index_name,omitempty"`
}

type LogDestinationOpenSearchParameters struct {

	// OpenSearch basic auth
	// Basic authentication details.
	// +kubebuilder:validation:Optional
	BasicAuth []OpenSearchBasicAuthParameters `json:"basicAuth" tf:"basic_auth,omitempty"`

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// OpenSearch cluster name.
	// +kubebuilder:validation:Optional
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Papertrail syslog endpoint.
	// OpenSearch endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The index name to use for the logs. If not set, the default index name is logs.
	// OpenSearch index name.
	// +kubebuilder:validation:Optional
	IndexName *string `json:"indexName,omitempty" tf:"index_name,omitempty"`
}

type LogDestinationPapertrailInitParameters struct {

	// Papertrail syslog endpoint.
	// Papertrail syslog endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type LogDestinationPapertrailObservation struct {

	// Papertrail syslog endpoint.
	// Papertrail syslog endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type LogDestinationPapertrailParameters struct {

	// Papertrail syslog endpoint.
	// Papertrail syslog endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint" tf:"endpoint,omitempty"`
}

type LogDestinationParameters struct {

	// Datadog configuration.
	// Datadog configuration.
	// +kubebuilder:validation:Optional
	Datadog []DatadogParameters `json:"datadog,omitempty" tf:"datadog,omitempty"`

	// Logtail configuration.
	// Logtail configuration.
	// +kubebuilder:validation:Optional
	Logtail []LogtailParameters `json:"logtail,omitempty" tf:"logtail,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// Name of the log destination
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// OpenSearch configuration.
	// +kubebuilder:validation:Optional
	OpenSearch []OpenSearchParameters `json:"openSearch,omitempty" tf:"open_search,omitempty"`

	// Papertrail configuration.
	// Papertrail configuration.
	// +kubebuilder:validation:Optional
	Papertrail []PapertrailParameters `json:"papertrail,omitempty" tf:"papertrail,omitempty"`
}

type LogtailInitParameters struct {

	// Logtail token.
	// Logtail token.
	Token *string `json:"token,omitempty" tf:"token,omitempty"`
}

type LogtailObservation struct {

	// Logtail token.
	// Logtail token.
	Token *string `json:"token,omitempty" tf:"token,omitempty"`
}

type LogtailParameters struct {

	// Logtail token.
	// Logtail token.
	// +kubebuilder:validation:Optional
	Token *string `json:"token" tf:"token,omitempty"`
}

type MatchInitParameters struct {

	// The path to match on.
	Path []PathInitParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type MatchObservation struct {

	// The path to match on.
	Path []PathObservation `json:"path,omitempty" tf:"path,omitempty"`
}

type MatchParameters struct {

	// The path to match on.
	// +kubebuilder:validation:Optional
	Path []PathParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type MetricsInitParameters struct {

	// Settings for scaling the component based on CPU utilization.
	// Settings for scaling the component based on CPU utilization.
	CPU []CPUInitParameters `json:"cpu,omitempty" tf:"cpu,omitempty"`
}

type MetricsObservation struct {

	// Settings for scaling the component based on CPU utilization.
	// Settings for scaling the component based on CPU utilization.
	CPU []CPUObservation `json:"cpu,omitempty" tf:"cpu,omitempty"`
}

type MetricsParameters struct {

	// Settings for scaling the component based on CPU utilization.
	// Settings for scaling the component based on CPU utilization.
	// +kubebuilder:validation:Optional
	CPU []CPUParameters `json:"cpu,omitempty" tf:"cpu,omitempty"`
}

type OpenSearchBasicAuthInitParameters struct {

	// Password for user defined in User. Is required when endpoint is set. Cannot be set if using a DigitalOcean DBaaS OpenSearch cluster.
	// Password for basic authentication.
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Username to authenticate with. Only required when endpoint is set. Defaults to doadmin when cluster_name is set.
	// user for basic authentication.
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type OpenSearchBasicAuthObservation struct {

	// Username to authenticate with. Only required when endpoint is set. Defaults to doadmin when cluster_name is set.
	// user for basic authentication.
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type OpenSearchBasicAuthParameters struct {

	// Password for user defined in User. Is required when endpoint is set. Cannot be set if using a DigitalOcean DBaaS OpenSearch cluster.
	// Password for basic authentication.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Username to authenticate with. Only required when endpoint is set. Defaults to doadmin when cluster_name is set.
	// user for basic authentication.
	// +kubebuilder:validation:Optional
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type OpenSearchInitParameters struct {

	// OpenSearch basic auth
	// Basic authentication details.
	BasicAuth []BasicAuthInitParameters `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// OpenSearch cluster name.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Papertrail syslog endpoint.
	// OpenSearch endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The index name to use for the logs. If not set, the default index name is logs.
	// OpenSearch index name.
	IndexName *string `json:"indexName,omitempty" tf:"index_name,omitempty"`
}

type OpenSearchObservation struct {

	// OpenSearch basic auth
	// Basic authentication details.
	BasicAuth []BasicAuthObservation `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// OpenSearch cluster name.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Papertrail syslog endpoint.
	// OpenSearch endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The index name to use for the logs. If not set, the default index name is logs.
	// OpenSearch index name.
	IndexName *string `json:"indexName,omitempty" tf:"index_name,omitempty"`
}

type OpenSearchParameters struct {

	// OpenSearch basic auth
	// Basic authentication details.
	// +kubebuilder:validation:Optional
	BasicAuth []BasicAuthParameters `json:"basicAuth" tf:"basic_auth,omitempty"`

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// OpenSearch cluster name.
	// +kubebuilder:validation:Optional
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Papertrail syslog endpoint.
	// OpenSearch endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The index name to use for the logs. If not set, the default index name is logs.
	// OpenSearch index name.
	// +kubebuilder:validation:Optional
	IndexName *string `json:"indexName,omitempty" tf:"index_name,omitempty"`
}

type PapertrailInitParameters struct {

	// Papertrail syslog endpoint.
	// Papertrail syslog endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type PapertrailObservation struct {

	// Papertrail syslog endpoint.
	// Papertrail syslog endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type PapertrailParameters struct {

	// Papertrail syslog endpoint.
	// Papertrail syslog endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint" tf:"endpoint,omitempty"`
}

type PathInitParameters struct {

	// Prefix-based match.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`
}

type PathObservation struct {

	// Prefix-based match.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`
}

type PathParameters struct {

	// Prefix-based match.
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`
}

type RedirectInitParameters struct {

	// The authority/host to redirect to. This can be a hostname or IP address.
	Authority *string `json:"authority,omitempty" tf:"authority,omitempty"`

	// The port to redirect to.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The redirect code to use. Supported values are 300, 301, 302, 303, 304, 307, 308.
	RedirectCode *float64 `json:"redirectCode,omitempty" tf:"redirect_code,omitempty"`

	// The scheme to redirect to. Supported values are http or https
	Scheme *string `json:"scheme,omitempty" tf:"scheme,omitempty"`

	// An optional URI path to redirect to.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type RedirectObservation struct {

	// The authority/host to redirect to. This can be a hostname or IP address.
	Authority *string `json:"authority,omitempty" tf:"authority,omitempty"`

	// The port to redirect to.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The redirect code to use. Supported values are 300, 301, 302, 303, 304, 307, 308.
	RedirectCode *float64 `json:"redirectCode,omitempty" tf:"redirect_code,omitempty"`

	// The scheme to redirect to. Supported values are http or https
	Scheme *string `json:"scheme,omitempty" tf:"scheme,omitempty"`

	// An optional URI path to redirect to.
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type RedirectParameters struct {

	// The authority/host to redirect to. This can be a hostname or IP address.
	// +kubebuilder:validation:Optional
	Authority *string `json:"authority,omitempty" tf:"authority,omitempty"`

	// The port to redirect to.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The redirect code to use. Supported values are 300, 301, 302, 303, 304, 307, 308.
	// +kubebuilder:validation:Optional
	RedirectCode *float64 `json:"redirectCode,omitempty" tf:"redirect_code,omitempty"`

	// The scheme to redirect to. Supported values are http or https
	// +kubebuilder:validation:Optional
	Scheme *string `json:"scheme,omitempty" tf:"scheme,omitempty"`

	// An optional URI path to redirect to.
	// +kubebuilder:validation:Optional
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type RoutesInitParameters struct {

	// The path to match on.
	// Path specifies an route by HTTP path prefix. Paths must start with / and must be unique within the app.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// An optional boolean flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component.
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix *bool `json:"preservePathPrefix,omitempty" tf:"preserve_path_prefix,omitempty"`
}

type RoutesObservation struct {

	// The path to match on.
	// Path specifies an route by HTTP path prefix. Paths must start with / and must be unique within the app.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// An optional boolean flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component.
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix *bool `json:"preservePathPrefix,omitempty" tf:"preserve_path_prefix,omitempty"`
}

type RoutesParameters struct {

	// The path to match on.
	// Path specifies an route by HTTP path prefix. Paths must start with / and must be unique within the app.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// An optional boolean flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component.
	// An optional flag to preserve the path that is forwarded to the backend service.
	// +kubebuilder:validation:Optional
	PreservePathPrefix *bool `json:"preservePathPrefix,omitempty" tf:"preserve_path_prefix,omitempty"`
}

type RuleCorsInitParameters struct {

	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is include. This configures the Access-Control-Allow-Credentials header.
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is `include`. This configures the Access-Control-Allow-Credentials header.
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// +listType=set
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// +listType=set
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The Access-Control-Allow-Origin can be
	// The set of allowed CORS origins. This configures the Access-Control-Allow-Origin header.
	AllowOrigins []CorsAllowOriginsInitParameters `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// +listType=set
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: 5h30m.
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type RuleCorsObservation struct {

	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is include. This configures the Access-Control-Allow-Credentials header.
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is `include`. This configures the Access-Control-Allow-Credentials header.
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// +listType=set
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// +listType=set
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The Access-Control-Allow-Origin can be
	// The set of allowed CORS origins. This configures the Access-Control-Allow-Origin header.
	AllowOrigins []CorsAllowOriginsObservation `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// +listType=set
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: 5h30m.
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type RuleCorsParameters struct {

	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is include. This configures the Access-Control-Allow-Credentials header.
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is `include`. This configures the Access-Control-Allow-Credentials header.
	// +kubebuilder:validation:Optional
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// +kubebuilder:validation:Optional
	// +listType=set
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// +kubebuilder:validation:Optional
	// +listType=set
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The Access-Control-Allow-Origin can be
	// The set of allowed CORS origins. This configures the Access-Control-Allow-Origin header.
	// +kubebuilder:validation:Optional
	AllowOrigins []CorsAllowOriginsParameters `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// +kubebuilder:validation:Optional
	// +listType=set
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: 5h30m.
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	// +kubebuilder:validation:Optional
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type RuleInitParameters struct {

	// The component to route to. Only one of component or redirect may be set.
	Component []ComponentInitParameters `json:"component,omitempty" tf:"component,omitempty"`

	// The CORS policies of the app.
	Cors []RuleCorsInitParameters `json:"cors,omitempty" tf:"cors,omitempty"`

	// The match configuration for the rule
	Match []MatchInitParameters `json:"match,omitempty" tf:"match,omitempty"`

	// The redirect configuration for the rule. Only one of component or redirect may be set.
	Redirect []RedirectInitParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`
}

type RuleObservation struct {

	// The component to route to. Only one of component or redirect may be set.
	Component []ComponentObservation `json:"component,omitempty" tf:"component,omitempty"`

	// The CORS policies of the app.
	Cors []RuleCorsObservation `json:"cors,omitempty" tf:"cors,omitempty"`

	// The match configuration for the rule
	Match []MatchObservation `json:"match,omitempty" tf:"match,omitempty"`

	// The redirect configuration for the rule. Only one of component or redirect may be set.
	Redirect []RedirectObservation `json:"redirect,omitempty" tf:"redirect,omitempty"`
}

type RuleParameters struct {

	// The component to route to. Only one of component or redirect may be set.
	// +kubebuilder:validation:Optional
	Component []ComponentParameters `json:"component,omitempty" tf:"component,omitempty"`

	// The CORS policies of the app.
	// +kubebuilder:validation:Optional
	Cors []RuleCorsParameters `json:"cors,omitempty" tf:"cors,omitempty"`

	// The match configuration for the rule
	// +kubebuilder:validation:Optional
	Match []MatchParameters `json:"match,omitempty" tf:"match,omitempty"`

	// The redirect configuration for the rule. Only one of component or redirect may be set.
	// +kubebuilder:validation:Optional
	Redirect []RedirectParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`
}

type ServiceAlertInitParameters struct {

	// Determines whether or not the alert is disabled (default: false).
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The operator to use. This is either of GREATER_THAN or LESS_THAN.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// The value of the environment variable.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// The time before alerts should be triggered. This is may be one of: FIVE_MINUTES, TEN_MINUTES, THIRTY_MINUTES, ONE_HOUR.
	Window *string `json:"window,omitempty" tf:"window,omitempty"`
}

type ServiceAlertObservation struct {

	// Determines whether or not the alert is disabled (default: false).
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The operator to use. This is either of GREATER_THAN or LESS_THAN.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// The value of the environment variable.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// The time before alerts should be triggered. This is may be one of: FIVE_MINUTES, TEN_MINUTES, THIRTY_MINUTES, ONE_HOUR.
	Window *string `json:"window,omitempty" tf:"window,omitempty"`
}

type ServiceAlertParameters struct {

	// Determines whether or not the alert is disabled (default: false).
	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The operator to use. This is either of GREATER_THAN or LESS_THAN.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	// +kubebuilder:validation:Optional
	Rule *string `json:"rule" tf:"rule,omitempty"`

	// The value of the environment variable.
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`

	// The time before alerts should be triggered. This is may be one of: FIVE_MINUTES, TEN_MINUTES, THIRTY_MINUTES, ONE_HOUR.
	// +kubebuilder:validation:Optional
	Window *string `json:"window" tf:"window,omitempty"`
}

type ServiceCorsAllowOriginsInitParameters struct {

	// The Access-Control-Allow-Origin header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	// Exact string match.
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// Prefix-based match.
	// Prefix-based match.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Access-Control-Allow-Origin header will be set to the client's origin if the client’s origin matches the regex you provide, in RE2 style syntax.
	// RE2 style regex-based match.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type ServiceCorsAllowOriginsObservation struct {

	// The Access-Control-Allow-Origin header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	// Exact string match.
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// Prefix-based match.
	// Prefix-based match.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Access-Control-Allow-Origin header will be set to the client's origin if the client’s origin matches the regex you provide, in RE2 style syntax.
	// RE2 style regex-based match.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type ServiceCorsAllowOriginsParameters struct {

	// The Access-Control-Allow-Origin header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	// Exact string match.
	// +kubebuilder:validation:Optional
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// Prefix-based match.
	// Prefix-based match.
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Access-Control-Allow-Origin header will be set to the client's origin if the client’s origin matches the regex you provide, in RE2 style syntax.
	// RE2 style regex-based match.
	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type ServiceCorsInitParameters struct {

	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is include. This configures the Access-Control-Allow-Credentials header.
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is `include`. This configures the Access-Control-Allow-Credentials header.
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// +listType=set
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// +listType=set
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The Access-Control-Allow-Origin can be
	// The set of allowed CORS origins. This configures the Access-Control-Allow-Origin header.
	AllowOrigins []ServiceCorsAllowOriginsInitParameters `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// +listType=set
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: 5h30m.
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type ServiceCorsObservation struct {

	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is include. This configures the Access-Control-Allow-Credentials header.
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is `include`. This configures the Access-Control-Allow-Credentials header.
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// +listType=set
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// +listType=set
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The Access-Control-Allow-Origin can be
	// The set of allowed CORS origins. This configures the Access-Control-Allow-Origin header.
	AllowOrigins []ServiceCorsAllowOriginsObservation `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// +listType=set
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: 5h30m.
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type ServiceCorsParameters struct {

	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is include. This configures the Access-Control-Allow-Credentials header.
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is `include`. This configures the Access-Control-Allow-Credentials header.
	// +kubebuilder:validation:Optional
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// +kubebuilder:validation:Optional
	// +listType=set
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// +kubebuilder:validation:Optional
	// +listType=set
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The Access-Control-Allow-Origin can be
	// The set of allowed CORS origins. This configures the Access-Control-Allow-Origin header.
	// +kubebuilder:validation:Optional
	AllowOrigins []ServiceCorsAllowOriginsParameters `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// +kubebuilder:validation:Optional
	// +listType=set
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: 5h30m.
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	// +kubebuilder:validation:Optional
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type ServiceEnvInitParameters struct {

	// The name of the environment variable.
	// The name of the environment variable.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value of the environment variable.
	// The value of the environment variable.
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type ServiceEnvObservation struct {

	// The name of the environment variable.
	// The name of the environment variable.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ServiceEnvParameters struct {

	// The name of the environment variable.
	// The name of the environment variable.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value of the environment variable.
	// The value of the environment variable.
	// +kubebuilder:validation:Optional
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type ServiceGitInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type ServiceGitObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type ServiceGitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	// +kubebuilder:validation:Optional
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type ServiceGithubInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type ServiceGithubObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type ServiceGithubParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	// +kubebuilder:validation:Optional
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type ServiceGitlabInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type ServiceGitlabObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type ServiceGitlabParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	// +kubebuilder:validation:Optional
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type ServiceImageInitParameters struct {

	// Whether to automatically deploy new commits made to the repo.
	// Configures automatically deploying images pushed to DOCR.
	DeployOnPush []ImageDeployOnPushInitParameters `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The registry name. Must be left empty for the DOCR registry type. Required for the DOCKER_HUB registry type.
	// The registry name. Must be left empty for the DOCR registry type.
	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	// The credentials required to access a private Docker Hub or GitHub registry, in the following syntax <username>:<token>.
	// Access credentials for third-party registries
	RegistryCredentialsSecretRef *v1.SecretKeySelector `json:"registryCredentialsSecretRef,omitempty" tf:"-"`

	// The registry type. One of DOCR (DigitalOcean container registry) or DOCKER_HUB.
	// The registry type.
	RegistryType *string `json:"registryType,omitempty" tf:"registry_type,omitempty"`

	// The repository name.
	// The repository name.
	Repository *string `json:"repository,omitempty" tf:"repository,omitempty"`

	// The repository tag. Defaults to latest if not provided.
	// The repository tag. Defaults to latest if not provided.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ServiceImageObservation struct {

	// Whether to automatically deploy new commits made to the repo.
	// Configures automatically deploying images pushed to DOCR.
	DeployOnPush []ImageDeployOnPushObservation `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The registry name. Must be left empty for the DOCR registry type. Required for the DOCKER_HUB registry type.
	// The registry name. Must be left empty for the DOCR registry type.
	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	// The registry type. One of DOCR (DigitalOcean container registry) or DOCKER_HUB.
	// The registry type.
	RegistryType *string `json:"registryType,omitempty" tf:"registry_type,omitempty"`

	// The repository name.
	// The repository name.
	Repository *string `json:"repository,omitempty" tf:"repository,omitempty"`

	// The repository tag. Defaults to latest if not provided.
	// The repository tag. Defaults to latest if not provided.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ServiceImageParameters struct {

	// Whether to automatically deploy new commits made to the repo.
	// Configures automatically deploying images pushed to DOCR.
	// +kubebuilder:validation:Optional
	DeployOnPush []ImageDeployOnPushParameters `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The registry name. Must be left empty for the DOCR registry type. Required for the DOCKER_HUB registry type.
	// The registry name. Must be left empty for the DOCR registry type.
	// +kubebuilder:validation:Optional
	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	// The credentials required to access a private Docker Hub or GitHub registry, in the following syntax <username>:<token>.
	// Access credentials for third-party registries
	// +kubebuilder:validation:Optional
	RegistryCredentialsSecretRef *v1.SecretKeySelector `json:"registryCredentialsSecretRef,omitempty" tf:"-"`

	// The registry type. One of DOCR (DigitalOcean container registry) or DOCKER_HUB.
	// The registry type.
	// +kubebuilder:validation:Optional
	RegistryType *string `json:"registryType" tf:"registry_type,omitempty"`

	// The repository name.
	// The repository name.
	// +kubebuilder:validation:Optional
	Repository *string `json:"repository" tf:"repository,omitempty"`

	// The repository tag. Defaults to latest if not provided.
	// The repository tag. Defaults to latest if not provided.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ServiceInitParameters struct {

	// Describes an alert policy for the app.
	// Alert policies for the app component
	Alert []ServiceAlertInitParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	// Configuration for automatically scaling this component based on metrics.
	Autoscaling []AutoscalingInitParameters `json:"autoscaling,omitempty" tf:"autoscaling,omitempty"`

	// An optional build command to run while building this component from source.
	// An optional build command to run while building this component from source.
	BuildCommand *string `json:"buildCommand,omitempty" tf:"build_command,omitempty"`

	// The CORS policies of the app.
	Cors []ServiceCorsInitParameters `json:"cors,omitempty" tf:"cors,omitempty"`

	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `json:"dockerfilePath,omitempty" tf:"dockerfile_path,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	Env []ServiceEnvInitParameters `json:"env,omitempty" tf:"env,omitempty"`

	// An environment slug describing the type of this app.
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `json:"environmentSlug,omitempty" tf:"environment_slug,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	Git []ServiceGitInitParameters `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Github []ServiceGithubInitParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Gitlab []ServiceGitlabInitParameters `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// The internal port on which this service's run command will listen.
	// The internal port on which this service's run command will listen.
	HTTPPort *float64 `json:"httpPort,omitempty" tf:"http_port,omitempty"`

	// A health check to determine the availability of this component.
	HealthCheck []HealthCheckInitParameters `json:"healthCheck,omitempty" tf:"health_check,omitempty"`

	// An image to use as the component's source. Only one of git, github, gitlab, or image may be set.
	Image []ServiceImageInitParameters `json:"image,omitempty" tf:"image,omitempty"`

	// The amount of instances that this component should be scaled to.
	// The amount of instances that this component should be scaled to.
	InstanceCount *float64 `json:"instanceCount,omitempty" tf:"instance_count,omitempty"`

	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be found with the API or using the doctl CLI (doctl apps tier instance-size list). Default: basic-xxs
	// The instance size to use for this component.
	InstanceSizeSlug *string `json:"instanceSizeSlug,omitempty" tf:"instance_size_slug,omitempty"`

	// A list of ports on which this service will listen for internal traffic.
	// +listType=set
	InternalPorts []*float64 `json:"internalPorts,omitempty" tf:"internal_ports,omitempty"`

	// Describes a log forwarding destination.
	// Logs
	LogDestination []ServiceLogDestinationInitParameters `json:"logDestination,omitempty" tf:"log_destination,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Deprecated - use ingress) An HTTP paths that should be routed to this component.
	Routes []ServiceRoutesInitParameters `json:"routes,omitempty" tf:"routes,omitempty"`

	// An optional run command to override the component's default.
	// An optional run command to override the component's default.
	RunCommand *string `json:"runCommand,omitempty" tf:"run_command,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type ServiceLogDestinationDatadogInitParameters struct {

	// Datadog API key.
	// Datadog API key.
	APIKey *string `json:"apiKey,omitempty" tf:"api_key,omitempty"`

	// Papertrail syslog endpoint.
	// Datadog HTTP log intake endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type ServiceLogDestinationDatadogObservation struct {

	// Datadog API key.
	// Datadog API key.
	APIKey *string `json:"apiKey,omitempty" tf:"api_key,omitempty"`

	// Papertrail syslog endpoint.
	// Datadog HTTP log intake endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type ServiceLogDestinationDatadogParameters struct {

	// Datadog API key.
	// Datadog API key.
	// +kubebuilder:validation:Optional
	APIKey *string `json:"apiKey" tf:"api_key,omitempty"`

	// Papertrail syslog endpoint.
	// Datadog HTTP log intake endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type ServiceLogDestinationInitParameters struct {

	// Datadog configuration.
	// Datadog configuration.
	Datadog []ServiceLogDestinationDatadogInitParameters `json:"datadog,omitempty" tf:"datadog,omitempty"`

	// Logtail configuration.
	// Logtail configuration.
	Logtail []ServiceLogDestinationLogtailInitParameters `json:"logtail,omitempty" tf:"logtail,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// Name of the log destination
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// OpenSearch configuration.
	OpenSearch []ServiceLogDestinationOpenSearchInitParameters `json:"openSearch,omitempty" tf:"open_search,omitempty"`

	// Papertrail configuration.
	// Papertrail configuration.
	Papertrail []ServiceLogDestinationPapertrailInitParameters `json:"papertrail,omitempty" tf:"papertrail,omitempty"`
}

type ServiceLogDestinationLogtailInitParameters struct {

	// Logtail token.
	// Logtail token.
	Token *string `json:"token,omitempty" tf:"token,omitempty"`
}

type ServiceLogDestinationLogtailObservation struct {

	// Logtail token.
	// Logtail token.
	Token *string `json:"token,omitempty" tf:"token,omitempty"`
}

type ServiceLogDestinationLogtailParameters struct {

	// Logtail token.
	// Logtail token.
	// +kubebuilder:validation:Optional
	Token *string `json:"token" tf:"token,omitempty"`
}

type ServiceLogDestinationObservation struct {

	// Datadog configuration.
	// Datadog configuration.
	Datadog []ServiceLogDestinationDatadogObservation `json:"datadog,omitempty" tf:"datadog,omitempty"`

	// Logtail configuration.
	// Logtail configuration.
	Logtail []ServiceLogDestinationLogtailObservation `json:"logtail,omitempty" tf:"logtail,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// Name of the log destination
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// OpenSearch configuration.
	OpenSearch []ServiceLogDestinationOpenSearchObservation `json:"openSearch,omitempty" tf:"open_search,omitempty"`

	// Papertrail configuration.
	// Papertrail configuration.
	Papertrail []ServiceLogDestinationPapertrailObservation `json:"papertrail,omitempty" tf:"papertrail,omitempty"`
}

type ServiceLogDestinationOpenSearchInitParameters struct {

	// OpenSearch basic auth
	// Basic authentication details.
	BasicAuth []LogDestinationOpenSearchBasicAuthInitParameters `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// OpenSearch cluster name.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Papertrail syslog endpoint.
	// OpenSearch endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The index name to use for the logs. If not set, the default index name is logs.
	// OpenSearch index name.
	IndexName *string `json:"indexName,omitempty" tf:"index_name,omitempty"`
}

type ServiceLogDestinationOpenSearchObservation struct {

	// OpenSearch basic auth
	// Basic authentication details.
	BasicAuth []LogDestinationOpenSearchBasicAuthObservation `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// OpenSearch cluster name.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Papertrail syslog endpoint.
	// OpenSearch endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The index name to use for the logs. If not set, the default index name is logs.
	// OpenSearch index name.
	IndexName *string `json:"indexName,omitempty" tf:"index_name,omitempty"`
}

type ServiceLogDestinationOpenSearchParameters struct {

	// OpenSearch basic auth
	// Basic authentication details.
	// +kubebuilder:validation:Optional
	BasicAuth []LogDestinationOpenSearchBasicAuthParameters `json:"basicAuth" tf:"basic_auth,omitempty"`

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// OpenSearch cluster name.
	// +kubebuilder:validation:Optional
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Papertrail syslog endpoint.
	// OpenSearch endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The index name to use for the logs. If not set, the default index name is logs.
	// OpenSearch index name.
	// +kubebuilder:validation:Optional
	IndexName *string `json:"indexName,omitempty" tf:"index_name,omitempty"`
}

type ServiceLogDestinationPapertrailInitParameters struct {

	// Papertrail syslog endpoint.
	// Papertrail syslog endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type ServiceLogDestinationPapertrailObservation struct {

	// Papertrail syslog endpoint.
	// Papertrail syslog endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type ServiceLogDestinationPapertrailParameters struct {

	// Papertrail syslog endpoint.
	// Papertrail syslog endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint" tf:"endpoint,omitempty"`
}

type ServiceLogDestinationParameters struct {

	// Datadog configuration.
	// Datadog configuration.
	// +kubebuilder:validation:Optional
	Datadog []ServiceLogDestinationDatadogParameters `json:"datadog,omitempty" tf:"datadog,omitempty"`

	// Logtail configuration.
	// Logtail configuration.
	// +kubebuilder:validation:Optional
	Logtail []ServiceLogDestinationLogtailParameters `json:"logtail,omitempty" tf:"logtail,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// Name of the log destination
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// OpenSearch configuration.
	// +kubebuilder:validation:Optional
	OpenSearch []ServiceLogDestinationOpenSearchParameters `json:"openSearch,omitempty" tf:"open_search,omitempty"`

	// Papertrail configuration.
	// Papertrail configuration.
	// +kubebuilder:validation:Optional
	Papertrail []ServiceLogDestinationPapertrailParameters `json:"papertrail,omitempty" tf:"papertrail,omitempty"`
}

type ServiceObservation struct {

	// Describes an alert policy for the app.
	// Alert policies for the app component
	Alert []ServiceAlertObservation `json:"alert,omitempty" tf:"alert,omitempty"`

	// Configuration for automatically scaling this component based on metrics.
	Autoscaling []AutoscalingObservation `json:"autoscaling,omitempty" tf:"autoscaling,omitempty"`

	// An optional build command to run while building this component from source.
	// An optional build command to run while building this component from source.
	BuildCommand *string `json:"buildCommand,omitempty" tf:"build_command,omitempty"`

	// The CORS policies of the app.
	Cors []ServiceCorsObservation `json:"cors,omitempty" tf:"cors,omitempty"`

	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `json:"dockerfilePath,omitempty" tf:"dockerfile_path,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	Env []ServiceEnvObservation `json:"env,omitempty" tf:"env,omitempty"`

	// An environment slug describing the type of this app.
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `json:"environmentSlug,omitempty" tf:"environment_slug,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	Git []ServiceGitObservation `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Github []ServiceGithubObservation `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Gitlab []ServiceGitlabObservation `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// The internal port on which this service's run command will listen.
	// The internal port on which this service's run command will listen.
	HTTPPort *float64 `json:"httpPort,omitempty" tf:"http_port,omitempty"`

	// A health check to determine the availability of this component.
	HealthCheck []HealthCheckObservation `json:"healthCheck,omitempty" tf:"health_check,omitempty"`

	// An image to use as the component's source. Only one of git, github, gitlab, or image may be set.
	Image []ServiceImageObservation `json:"image,omitempty" tf:"image,omitempty"`

	// The amount of instances that this component should be scaled to.
	// The amount of instances that this component should be scaled to.
	InstanceCount *float64 `json:"instanceCount,omitempty" tf:"instance_count,omitempty"`

	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be found with the API or using the doctl CLI (doctl apps tier instance-size list). Default: basic-xxs
	// The instance size to use for this component.
	InstanceSizeSlug *string `json:"instanceSizeSlug,omitempty" tf:"instance_size_slug,omitempty"`

	// A list of ports on which this service will listen for internal traffic.
	// +listType=set
	InternalPorts []*float64 `json:"internalPorts,omitempty" tf:"internal_ports,omitempty"`

	// Describes a log forwarding destination.
	// Logs
	LogDestination []ServiceLogDestinationObservation `json:"logDestination,omitempty" tf:"log_destination,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Deprecated - use ingress) An HTTP paths that should be routed to this component.
	Routes []ServiceRoutesObservation `json:"routes,omitempty" tf:"routes,omitempty"`

	// An optional run command to override the component's default.
	// An optional run command to override the component's default.
	RunCommand *string `json:"runCommand,omitempty" tf:"run_command,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type ServiceParameters struct {

	// Describes an alert policy for the app.
	// Alert policies for the app component
	// +kubebuilder:validation:Optional
	Alert []ServiceAlertParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	// Configuration for automatically scaling this component based on metrics.
	// +kubebuilder:validation:Optional
	Autoscaling []AutoscalingParameters `json:"autoscaling,omitempty" tf:"autoscaling,omitempty"`

	// An optional build command to run while building this component from source.
	// An optional build command to run while building this component from source.
	// +kubebuilder:validation:Optional
	BuildCommand *string `json:"buildCommand,omitempty" tf:"build_command,omitempty"`

	// The CORS policies of the app.
	// +kubebuilder:validation:Optional
	Cors []ServiceCorsParameters `json:"cors,omitempty" tf:"cors,omitempty"`

	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// +kubebuilder:validation:Optional
	DockerfilePath *string `json:"dockerfilePath,omitempty" tf:"dockerfile_path,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	// +kubebuilder:validation:Optional
	Env []ServiceEnvParameters `json:"env,omitempty" tf:"env,omitempty"`

	// An environment slug describing the type of this app.
	// An environment slug describing the type of this app.
	// +kubebuilder:validation:Optional
	EnvironmentSlug *string `json:"environmentSlug,omitempty" tf:"environment_slug,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	// +kubebuilder:validation:Optional
	Git []ServiceGitParameters `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Github []ServiceGithubParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Gitlab []ServiceGitlabParameters `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// The internal port on which this service's run command will listen.
	// The internal port on which this service's run command will listen.
	// +kubebuilder:validation:Optional
	HTTPPort *float64 `json:"httpPort,omitempty" tf:"http_port,omitempty"`

	// A health check to determine the availability of this component.
	// +kubebuilder:validation:Optional
	HealthCheck []HealthCheckParameters `json:"healthCheck,omitempty" tf:"health_check,omitempty"`

	// An image to use as the component's source. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Image []ServiceImageParameters `json:"image,omitempty" tf:"image,omitempty"`

	// The amount of instances that this component should be scaled to.
	// The amount of instances that this component should be scaled to.
	// +kubebuilder:validation:Optional
	InstanceCount *float64 `json:"instanceCount,omitempty" tf:"instance_count,omitempty"`

	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be found with the API or using the doctl CLI (doctl apps tier instance-size list). Default: basic-xxs
	// The instance size to use for this component.
	// +kubebuilder:validation:Optional
	InstanceSizeSlug *string `json:"instanceSizeSlug,omitempty" tf:"instance_size_slug,omitempty"`

	// A list of ports on which this service will listen for internal traffic.
	// +kubebuilder:validation:Optional
	// +listType=set
	InternalPorts []*float64 `json:"internalPorts,omitempty" tf:"internal_ports,omitempty"`

	// Describes a log forwarding destination.
	// Logs
	// +kubebuilder:validation:Optional
	LogDestination []ServiceLogDestinationParameters `json:"logDestination,omitempty" tf:"log_destination,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (Deprecated - use ingress) An HTTP paths that should be routed to this component.
	// +kubebuilder:validation:Optional
	Routes []ServiceRoutesParameters `json:"routes,omitempty" tf:"routes,omitempty"`

	// An optional run command to override the component's default.
	// An optional run command to override the component's default.
	// +kubebuilder:validation:Optional
	RunCommand *string `json:"runCommand,omitempty" tf:"run_command,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	// +kubebuilder:validation:Optional
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type ServiceRoutesInitParameters struct {

	// The path to match on.
	// Path specifies an route by HTTP path prefix. Paths must start with / and must be unique within the app.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// An optional boolean flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component.
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix *bool `json:"preservePathPrefix,omitempty" tf:"preserve_path_prefix,omitempty"`
}

type ServiceRoutesObservation struct {

	// The path to match on.
	// Path specifies an route by HTTP path prefix. Paths must start with / and must be unique within the app.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// An optional boolean flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component.
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix *bool `json:"preservePathPrefix,omitempty" tf:"preserve_path_prefix,omitempty"`
}

type ServiceRoutesParameters struct {

	// The path to match on.
	// Path specifies an route by HTTP path prefix. Paths must start with / and must be unique within the app.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// An optional boolean flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component.
	// An optional flag to preserve the path that is forwarded to the backend service.
	// +kubebuilder:validation:Optional
	PreservePathPrefix *bool `json:"preservePathPrefix,omitempty" tf:"preserve_path_prefix,omitempty"`
}

type SpecInitParameters struct {

	// Describes an alert policy for the app.
	Alert []AlertInitParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	Database []DatabaseInitParameters `json:"database,omitempty" tf:"database,omitempty"`

	// Describes a domain where the application will be made available.
	Domain []DomainInitParameters `json:"domain,omitempty" tf:"domain,omitempty"`

	// +listType=set
	Domains []*string `json:"domains,omitempty" tf:"domains,omitempty"`

	// Specification for app egress configurations.
	Egress []EgressInitParameters `json:"egress,omitempty" tf:"egress,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	Env []EnvInitParameters `json:"env,omitempty" tf:"env,omitempty"`

	// A list of the features applied to the app. The default buildpack can be overridden here. List of available buildpacks can be found using the doctl CLI
	// List of features which is applied to the app
	// +listType=set
	Features []*string `json:"features,omitempty" tf:"features,omitempty"`

	Function []FunctionInitParameters `json:"function,omitempty" tf:"function,omitempty"`

	// Specification for component routing, rewrites, and redirects.
	Ingress []IngressInitParameters `json:"ingress,omitempty" tf:"ingress,omitempty"`

	Job []JobInitParameters `json:"job,omitempty" tf:"job,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the app. Must be unique across all apps in the same account.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The slug for the DigitalOcean data center region hosting the app.
	// The slug for the DigitalOcean data center region hosting the app
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	Service []ServiceInitParameters `json:"service,omitempty" tf:"service,omitempty"`

	StaticSite []StaticSiteInitParameters `json:"staticSite,omitempty" tf:"static_site,omitempty"`

	Worker []WorkerInitParameters `json:"worker,omitempty" tf:"worker,omitempty"`
}

type SpecObservation struct {

	// Describes an alert policy for the app.
	Alert []AlertObservation `json:"alert,omitempty" tf:"alert,omitempty"`

	Database []DatabaseObservation `json:"database,omitempty" tf:"database,omitempty"`

	// Describes a domain where the application will be made available.
	Domain []DomainObservation `json:"domain,omitempty" tf:"domain,omitempty"`

	// +listType=set
	Domains []*string `json:"domains,omitempty" tf:"domains,omitempty"`

	// Specification for app egress configurations.
	Egress []EgressObservation `json:"egress,omitempty" tf:"egress,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	Env []EnvObservation `json:"env,omitempty" tf:"env,omitempty"`

	// A list of the features applied to the app. The default buildpack can be overridden here. List of available buildpacks can be found using the doctl CLI
	// List of features which is applied to the app
	// +listType=set
	Features []*string `json:"features,omitempty" tf:"features,omitempty"`

	Function []FunctionObservation `json:"function,omitempty" tf:"function,omitempty"`

	// Specification for component routing, rewrites, and redirects.
	Ingress []IngressObservation `json:"ingress,omitempty" tf:"ingress,omitempty"`

	Job []JobObservation `json:"job,omitempty" tf:"job,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the app. Must be unique across all apps in the same account.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The slug for the DigitalOcean data center region hosting the app.
	// The slug for the DigitalOcean data center region hosting the app
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	Service []ServiceObservation `json:"service,omitempty" tf:"service,omitempty"`

	StaticSite []StaticSiteObservation `json:"staticSite,omitempty" tf:"static_site,omitempty"`

	Worker []WorkerObservation `json:"worker,omitempty" tf:"worker,omitempty"`
}

type SpecParameters struct {

	// Describes an alert policy for the app.
	// +kubebuilder:validation:Optional
	Alert []AlertParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	// +kubebuilder:validation:Optional
	Database []DatabaseParameters `json:"database,omitempty" tf:"database,omitempty"`

	// Describes a domain where the application will be made available.
	// +kubebuilder:validation:Optional
	Domain []DomainParameters `json:"domain,omitempty" tf:"domain,omitempty"`

	// +kubebuilder:validation:Optional
	// +listType=set
	Domains []*string `json:"domains,omitempty" tf:"domains,omitempty"`

	// Specification for app egress configurations.
	// +kubebuilder:validation:Optional
	Egress []EgressParameters `json:"egress,omitempty" tf:"egress,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	// +kubebuilder:validation:Optional
	Env []EnvParameters `json:"env,omitempty" tf:"env,omitempty"`

	// A list of the features applied to the app. The default buildpack can be overridden here. List of available buildpacks can be found using the doctl CLI
	// List of features which is applied to the app
	// +kubebuilder:validation:Optional
	// +listType=set
	Features []*string `json:"features,omitempty" tf:"features,omitempty"`

	// +kubebuilder:validation:Optional
	Function []FunctionParameters `json:"function,omitempty" tf:"function,omitempty"`

	// Specification for component routing, rewrites, and redirects.
	// +kubebuilder:validation:Optional
	Ingress []IngressParameters `json:"ingress,omitempty" tf:"ingress,omitempty"`

	// +kubebuilder:validation:Optional
	Job []JobParameters `json:"job,omitempty" tf:"job,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the app. Must be unique across all apps in the same account.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The slug for the DigitalOcean data center region hosting the app.
	// The slug for the DigitalOcean data center region hosting the app
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// +kubebuilder:validation:Optional
	Service []ServiceParameters `json:"service,omitempty" tf:"service,omitempty"`

	// +kubebuilder:validation:Optional
	StaticSite []StaticSiteParameters `json:"staticSite,omitempty" tf:"static_site,omitempty"`

	// +kubebuilder:validation:Optional
	Worker []WorkerParameters `json:"worker,omitempty" tf:"worker,omitempty"`
}

type StaticSiteCorsAllowOriginsInitParameters struct {

	// The Access-Control-Allow-Origin header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	// Exact string match.
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// Prefix-based match.
	// Prefix-based match.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Access-Control-Allow-Origin header will be set to the client's origin if the client’s origin matches the regex you provide, in RE2 style syntax.
	// RE2 style regex-based match.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type StaticSiteCorsAllowOriginsObservation struct {

	// The Access-Control-Allow-Origin header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	// Exact string match.
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// Prefix-based match.
	// Prefix-based match.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Access-Control-Allow-Origin header will be set to the client's origin if the client’s origin matches the regex you provide, in RE2 style syntax.
	// RE2 style regex-based match.
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type StaticSiteCorsAllowOriginsParameters struct {

	// The Access-Control-Allow-Origin header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	// Exact string match.
	// +kubebuilder:validation:Optional
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// Prefix-based match.
	// Prefix-based match.
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// The Access-Control-Allow-Origin header will be set to the client's origin if the client’s origin matches the regex you provide, in RE2 style syntax.
	// RE2 style regex-based match.
	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type StaticSiteCorsInitParameters struct {

	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is include. This configures the Access-Control-Allow-Credentials header.
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is `include`. This configures the Access-Control-Allow-Credentials header.
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// +listType=set
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// +listType=set
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The Access-Control-Allow-Origin can be
	// The set of allowed CORS origins. This configures the Access-Control-Allow-Origin header.
	AllowOrigins []StaticSiteCorsAllowOriginsInitParameters `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// +listType=set
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: 5h30m.
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type StaticSiteCorsObservation struct {

	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is include. This configures the Access-Control-Allow-Credentials header.
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is `include`. This configures the Access-Control-Allow-Credentials header.
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// +listType=set
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// +listType=set
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The Access-Control-Allow-Origin can be
	// The set of allowed CORS origins. This configures the Access-Control-Allow-Origin header.
	AllowOrigins []StaticSiteCorsAllowOriginsObservation `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// +listType=set
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: 5h30m.
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type StaticSiteCorsParameters struct {

	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is include. This configures the Access-Control-Allow-Credentials header.
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is `include`. This configures the Access-Control-Allow-Credentials header.
	// +kubebuilder:validation:Optional
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// The set of allowed HTTP request headers. This configures the Access-Control-Allow-Headers header.
	// +kubebuilder:validation:Optional
	// +listType=set
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// The set of allowed HTTP methods. This configures the Access-Control-Allow-Methods header.
	// +kubebuilder:validation:Optional
	// +listType=set
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The Access-Control-Allow-Origin can be
	// The set of allowed CORS origins. This configures the Access-Control-Allow-Origin header.
	// +kubebuilder:validation:Optional
	AllowOrigins []StaticSiteCorsAllowOriginsParameters `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// The set of HTTP response headers that browsers are allowed to access. This configures the Access-Control-Expose-Headers header.
	// +kubebuilder:validation:Optional
	// +listType=set
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: 5h30m.
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	// +kubebuilder:validation:Optional
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type StaticSiteEnvInitParameters struct {

	// The name of the environment variable.
	// The name of the environment variable.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value of the environment variable.
	// The value of the environment variable.
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type StaticSiteEnvObservation struct {

	// The name of the environment variable.
	// The name of the environment variable.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type StaticSiteEnvParameters struct {

	// The name of the environment variable.
	// The name of the environment variable.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value of the environment variable.
	// The value of the environment variable.
	// +kubebuilder:validation:Optional
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type StaticSiteGitInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type StaticSiteGitObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type StaticSiteGitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	// +kubebuilder:validation:Optional
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type StaticSiteGithubInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type StaticSiteGithubObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type StaticSiteGithubParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	// +kubebuilder:validation:Optional
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type StaticSiteGitlabInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type StaticSiteGitlabObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type StaticSiteGitlabParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	// +kubebuilder:validation:Optional
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type StaticSiteInitParameters struct {

	// An optional build command to run while building this component from source.
	// An optional build command to run while building this component from source.
	BuildCommand *string `json:"buildCommand,omitempty" tf:"build_command,omitempty"`

	// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.
	// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.
	CatchallDocument *string `json:"catchallDocument,omitempty" tf:"catchall_document,omitempty"`

	// The CORS policies of the app.
	Cors []StaticSiteCorsInitParameters `json:"cors,omitempty" tf:"cors,omitempty"`

	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `json:"dockerfilePath,omitempty" tf:"dockerfile_path,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	Env []StaticSiteEnvInitParameters `json:"env,omitempty" tf:"env,omitempty"`

	// An environment slug describing the type of this app.
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `json:"environmentSlug,omitempty" tf:"environment_slug,omitempty"`

	// The name of the error document to use when serving this static site.
	// The name of the error document to use when serving this static site.
	ErrorDocument *string `json:"errorDocument,omitempty" tf:"error_document,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	Git []StaticSiteGitInitParameters `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Github []StaticSiteGithubInitParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Gitlab []StaticSiteGitlabInitParameters `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// The name of the index document to use when serving this static site.
	// The name of the index document to use when serving this static site.
	IndexDocument *string `json:"indexDocument,omitempty" tf:"index_document,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: _static, dist, public.
	// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`.
	OutputDir *string `json:"outputDir,omitempty" tf:"output_dir,omitempty"`

	// (Deprecated - use ingress) An HTTP paths that should be routed to this component.
	Routes []StaticSiteRoutesInitParameters `json:"routes,omitempty" tf:"routes,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type StaticSiteObservation struct {

	// An optional build command to run while building this component from source.
	// An optional build command to run while building this component from source.
	BuildCommand *string `json:"buildCommand,omitempty" tf:"build_command,omitempty"`

	// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.
	// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.
	CatchallDocument *string `json:"catchallDocument,omitempty" tf:"catchall_document,omitempty"`

	// The CORS policies of the app.
	Cors []StaticSiteCorsObservation `json:"cors,omitempty" tf:"cors,omitempty"`

	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `json:"dockerfilePath,omitempty" tf:"dockerfile_path,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	Env []StaticSiteEnvObservation `json:"env,omitempty" tf:"env,omitempty"`

	// An environment slug describing the type of this app.
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `json:"environmentSlug,omitempty" tf:"environment_slug,omitempty"`

	// The name of the error document to use when serving this static site.
	// The name of the error document to use when serving this static site.
	ErrorDocument *string `json:"errorDocument,omitempty" tf:"error_document,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	Git []StaticSiteGitObservation `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Github []StaticSiteGithubObservation `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Gitlab []StaticSiteGitlabObservation `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// The name of the index document to use when serving this static site.
	// The name of the index document to use when serving this static site.
	IndexDocument *string `json:"indexDocument,omitempty" tf:"index_document,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: _static, dist, public.
	// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`.
	OutputDir *string `json:"outputDir,omitempty" tf:"output_dir,omitempty"`

	// (Deprecated - use ingress) An HTTP paths that should be routed to this component.
	Routes []StaticSiteRoutesObservation `json:"routes,omitempty" tf:"routes,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type StaticSiteParameters struct {

	// An optional build command to run while building this component from source.
	// An optional build command to run while building this component from source.
	// +kubebuilder:validation:Optional
	BuildCommand *string `json:"buildCommand,omitempty" tf:"build_command,omitempty"`

	// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.
	// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.
	// +kubebuilder:validation:Optional
	CatchallDocument *string `json:"catchallDocument,omitempty" tf:"catchall_document,omitempty"`

	// The CORS policies of the app.
	// +kubebuilder:validation:Optional
	Cors []StaticSiteCorsParameters `json:"cors,omitempty" tf:"cors,omitempty"`

	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// +kubebuilder:validation:Optional
	DockerfilePath *string `json:"dockerfilePath,omitempty" tf:"dockerfile_path,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	// +kubebuilder:validation:Optional
	Env []StaticSiteEnvParameters `json:"env,omitempty" tf:"env,omitempty"`

	// An environment slug describing the type of this app.
	// An environment slug describing the type of this app.
	// +kubebuilder:validation:Optional
	EnvironmentSlug *string `json:"environmentSlug,omitempty" tf:"environment_slug,omitempty"`

	// The name of the error document to use when serving this static site.
	// The name of the error document to use when serving this static site.
	// +kubebuilder:validation:Optional
	ErrorDocument *string `json:"errorDocument,omitempty" tf:"error_document,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	// +kubebuilder:validation:Optional
	Git []StaticSiteGitParameters `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Github []StaticSiteGithubParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Gitlab []StaticSiteGitlabParameters `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// The name of the index document to use when serving this static site.
	// The name of the index document to use when serving this static site.
	// +kubebuilder:validation:Optional
	IndexDocument *string `json:"indexDocument,omitempty" tf:"index_document,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: _static, dist, public.
	// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`.
	// +kubebuilder:validation:Optional
	OutputDir *string `json:"outputDir,omitempty" tf:"output_dir,omitempty"`

	// (Deprecated - use ingress) An HTTP paths that should be routed to this component.
	// +kubebuilder:validation:Optional
	Routes []StaticSiteRoutesParameters `json:"routes,omitempty" tf:"routes,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	// +kubebuilder:validation:Optional
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type StaticSiteRoutesInitParameters struct {

	// The path to match on.
	// Path specifies an route by HTTP path prefix. Paths must start with / and must be unique within the app.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// An optional boolean flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component.
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix *bool `json:"preservePathPrefix,omitempty" tf:"preserve_path_prefix,omitempty"`
}

type StaticSiteRoutesObservation struct {

	// The path to match on.
	// Path specifies an route by HTTP path prefix. Paths must start with / and must be unique within the app.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// An optional boolean flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component.
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix *bool `json:"preservePathPrefix,omitempty" tf:"preserve_path_prefix,omitempty"`
}

type StaticSiteRoutesParameters struct {

	// The path to match on.
	// Path specifies an route by HTTP path prefix. Paths must start with / and must be unique within the app.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// An optional boolean flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component.
	// An optional flag to preserve the path that is forwarded to the backend service.
	// +kubebuilder:validation:Optional
	PreservePathPrefix *bool `json:"preservePathPrefix,omitempty" tf:"preserve_path_prefix,omitempty"`
}

type WorkerAlertInitParameters struct {

	// Determines whether or not the alert is disabled (default: false).
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The operator to use. This is either of GREATER_THAN or LESS_THAN.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// The value of the environment variable.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// The time before alerts should be triggered. This is may be one of: FIVE_MINUTES, TEN_MINUTES, THIRTY_MINUTES, ONE_HOUR.
	Window *string `json:"window,omitempty" tf:"window,omitempty"`
}

type WorkerAlertObservation struct {

	// Determines whether or not the alert is disabled (default: false).
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The operator to use. This is either of GREATER_THAN or LESS_THAN.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// The value of the environment variable.
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// The time before alerts should be triggered. This is may be one of: FIVE_MINUTES, TEN_MINUTES, THIRTY_MINUTES, ONE_HOUR.
	Window *string `json:"window,omitempty" tf:"window,omitempty"`
}

type WorkerAlertParameters struct {

	// Determines whether or not the alert is disabled (default: false).
	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The operator to use. This is either of GREATER_THAN or LESS_THAN.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// The type of the alert to configure. Top-level app alert policies can be: DEPLOYMENT_CANCELLED, DEPLOYMENT_FAILED, DEPLOYMENT_LIVE, DEPLOYMENT_STARTED, DOMAIN_FAILED, or DOMAIN_LIVE.
	// +kubebuilder:validation:Optional
	Rule *string `json:"rule" tf:"rule,omitempty"`

	// The value of the environment variable.
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`

	// The time before alerts should be triggered. This is may be one of: FIVE_MINUTES, TEN_MINUTES, THIRTY_MINUTES, ONE_HOUR.
	// +kubebuilder:validation:Optional
	Window *string `json:"window" tf:"window,omitempty"`
}

type WorkerEnvInitParameters struct {

	// The name of the environment variable.
	// The name of the environment variable.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value of the environment variable.
	// The value of the environment variable.
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type WorkerEnvObservation struct {

	// The name of the environment variable.
	// The name of the environment variable.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type WorkerEnvParameters struct {

	// The name of the environment variable.
	// The name of the environment variable.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The visibility scope of the environment variable. One of RUN_TIME, BUILD_TIME, or RUN_AND_BUILD_TIME (default).
	// The visibility scope of the environment variable.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The domain type, which can be one of the following:
	// The type of the environment variable.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The value of the environment variable.
	// The value of the environment variable.
	// +kubebuilder:validation:Optional
	ValueSecretRef *v1.SecretKeySelector `json:"valueSecretRef,omitempty" tf:"-"`
}

type WorkerGitInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type WorkerGitObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type WorkerGitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// The clone URL of the repo.
	// The clone URL of the repo.
	// +kubebuilder:validation:Optional
	RepoCloneURL *string `json:"repoCloneUrl,omitempty" tf:"repo_clone_url,omitempty"`
}

type WorkerGithubInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type WorkerGithubObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type WorkerGithubParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	// +kubebuilder:validation:Optional
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type WorkerGitlabInitParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type WorkerGitlabObservation struct {

	// The name of the branch to use.
	// The name of the branch to use.
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type WorkerGitlabParameters struct {

	// The name of the branch to use.
	// The name of the branch to use.
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// Whether to automatically deploy new commits made to the repo.
	// Whether to automatically deploy new commits made to the repo
	// +kubebuilder:validation:Optional
	DeployOnPush *bool `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The name of the repo in the format owner/repo.
	// The name of the repo in the format `owner/repo`.
	// +kubebuilder:validation:Optional
	Repo *string `json:"repo,omitempty" tf:"repo,omitempty"`
}

type WorkerImageDeployOnPushInitParameters struct {

	// Whether to automatically deploy images pushed to DOCR.
	// Whether to automatically deploy images pushed to DOCR.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type WorkerImageDeployOnPushObservation struct {

	// Whether to automatically deploy images pushed to DOCR.
	// Whether to automatically deploy images pushed to DOCR.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type WorkerImageDeployOnPushParameters struct {

	// Whether to automatically deploy images pushed to DOCR.
	// Whether to automatically deploy images pushed to DOCR.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type WorkerImageInitParameters struct {

	// Whether to automatically deploy new commits made to the repo.
	// Configures automatically deploying images pushed to DOCR.
	DeployOnPush []WorkerImageDeployOnPushInitParameters `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The registry name. Must be left empty for the DOCR registry type. Required for the DOCKER_HUB registry type.
	// The registry name. Must be left empty for the DOCR registry type.
	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	// The credentials required to access a private Docker Hub or GitHub registry, in the following syntax <username>:<token>.
	// Access credentials for third-party registries
	RegistryCredentialsSecretRef *v1.SecretKeySelector `json:"registryCredentialsSecretRef,omitempty" tf:"-"`

	// The registry type. One of DOCR (DigitalOcean container registry) or DOCKER_HUB.
	// The registry type.
	RegistryType *string `json:"registryType,omitempty" tf:"registry_type,omitempty"`

	// The repository name.
	// The repository name.
	Repository *string `json:"repository,omitempty" tf:"repository,omitempty"`

	// The repository tag. Defaults to latest if not provided.
	// The repository tag. Defaults to latest if not provided.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type WorkerImageObservation struct {

	// Whether to automatically deploy new commits made to the repo.
	// Configures automatically deploying images pushed to DOCR.
	DeployOnPush []WorkerImageDeployOnPushObservation `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The registry name. Must be left empty for the DOCR registry type. Required for the DOCKER_HUB registry type.
	// The registry name. Must be left empty for the DOCR registry type.
	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	// The registry type. One of DOCR (DigitalOcean container registry) or DOCKER_HUB.
	// The registry type.
	RegistryType *string `json:"registryType,omitempty" tf:"registry_type,omitempty"`

	// The repository name.
	// The repository name.
	Repository *string `json:"repository,omitempty" tf:"repository,omitempty"`

	// The repository tag. Defaults to latest if not provided.
	// The repository tag. Defaults to latest if not provided.
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type WorkerImageParameters struct {

	// Whether to automatically deploy new commits made to the repo.
	// Configures automatically deploying images pushed to DOCR.
	// +kubebuilder:validation:Optional
	DeployOnPush []WorkerImageDeployOnPushParameters `json:"deployOnPush,omitempty" tf:"deploy_on_push,omitempty"`

	// The registry name. Must be left empty for the DOCR registry type. Required for the DOCKER_HUB registry type.
	// The registry name. Must be left empty for the DOCR registry type.
	// +kubebuilder:validation:Optional
	Registry *string `json:"registry,omitempty" tf:"registry,omitempty"`

	// The credentials required to access a private Docker Hub or GitHub registry, in the following syntax <username>:<token>.
	// Access credentials for third-party registries
	// +kubebuilder:validation:Optional
	RegistryCredentialsSecretRef *v1.SecretKeySelector `json:"registryCredentialsSecretRef,omitempty" tf:"-"`

	// The registry type. One of DOCR (DigitalOcean container registry) or DOCKER_HUB.
	// The registry type.
	// +kubebuilder:validation:Optional
	RegistryType *string `json:"registryType" tf:"registry_type,omitempty"`

	// The repository name.
	// The repository name.
	// +kubebuilder:validation:Optional
	Repository *string `json:"repository" tf:"repository,omitempty"`

	// The repository tag. Defaults to latest if not provided.
	// The repository tag. Defaults to latest if not provided.
	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type WorkerInitParameters struct {

	// Describes an alert policy for the app.
	// Alert policies for the app component
	Alert []WorkerAlertInitParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	// An optional build command to run while building this component from source.
	// An optional build command to run while building this component from source.
	BuildCommand *string `json:"buildCommand,omitempty" tf:"build_command,omitempty"`

	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `json:"dockerfilePath,omitempty" tf:"dockerfile_path,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	Env []WorkerEnvInitParameters `json:"env,omitempty" tf:"env,omitempty"`

	// An environment slug describing the type of this app.
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `json:"environmentSlug,omitempty" tf:"environment_slug,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	Git []WorkerGitInitParameters `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Github []WorkerGithubInitParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Gitlab []WorkerGitlabInitParameters `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// An image to use as the component's source. Only one of git, github, gitlab, or image may be set.
	Image []WorkerImageInitParameters `json:"image,omitempty" tf:"image,omitempty"`

	// The amount of instances that this component should be scaled to.
	// The amount of instances that this component should be scaled to.
	InstanceCount *float64 `json:"instanceCount,omitempty" tf:"instance_count,omitempty"`

	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be found with the API or using the doctl CLI (doctl apps tier instance-size list). Default: basic-xxs
	// The instance size to use for this component.
	InstanceSizeSlug *string `json:"instanceSizeSlug,omitempty" tf:"instance_size_slug,omitempty"`

	// Describes a log forwarding destination.
	// Logs
	LogDestination []WorkerLogDestinationInitParameters `json:"logDestination,omitempty" tf:"log_destination,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An optional run command to override the component's default.
	// An optional run command to override the component's default.
	RunCommand *string `json:"runCommand,omitempty" tf:"run_command,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type WorkerLogDestinationDatadogInitParameters struct {

	// Datadog API key.
	// Datadog API key.
	APIKey *string `json:"apiKey,omitempty" tf:"api_key,omitempty"`

	// Papertrail syslog endpoint.
	// Datadog HTTP log intake endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type WorkerLogDestinationDatadogObservation struct {

	// Datadog API key.
	// Datadog API key.
	APIKey *string `json:"apiKey,omitempty" tf:"api_key,omitempty"`

	// Papertrail syslog endpoint.
	// Datadog HTTP log intake endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type WorkerLogDestinationDatadogParameters struct {

	// Datadog API key.
	// Datadog API key.
	// +kubebuilder:validation:Optional
	APIKey *string `json:"apiKey" tf:"api_key,omitempty"`

	// Papertrail syslog endpoint.
	// Datadog HTTP log intake endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type WorkerLogDestinationInitParameters struct {

	// Datadog configuration.
	// Datadog configuration.
	Datadog []WorkerLogDestinationDatadogInitParameters `json:"datadog,omitempty" tf:"datadog,omitempty"`

	// Logtail configuration.
	// Logtail configuration.
	Logtail []WorkerLogDestinationLogtailInitParameters `json:"logtail,omitempty" tf:"logtail,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// Name of the log destination
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// OpenSearch configuration.
	OpenSearch []WorkerLogDestinationOpenSearchInitParameters `json:"openSearch,omitempty" tf:"open_search,omitempty"`

	// Papertrail configuration.
	// Papertrail configuration.
	Papertrail []WorkerLogDestinationPapertrailInitParameters `json:"papertrail,omitempty" tf:"papertrail,omitempty"`
}

type WorkerLogDestinationLogtailInitParameters struct {

	// Logtail token.
	// Logtail token.
	Token *string `json:"token,omitempty" tf:"token,omitempty"`
}

type WorkerLogDestinationLogtailObservation struct {

	// Logtail token.
	// Logtail token.
	Token *string `json:"token,omitempty" tf:"token,omitempty"`
}

type WorkerLogDestinationLogtailParameters struct {

	// Logtail token.
	// Logtail token.
	// +kubebuilder:validation:Optional
	Token *string `json:"token" tf:"token,omitempty"`
}

type WorkerLogDestinationObservation struct {

	// Datadog configuration.
	// Datadog configuration.
	Datadog []WorkerLogDestinationDatadogObservation `json:"datadog,omitempty" tf:"datadog,omitempty"`

	// Logtail configuration.
	// Logtail configuration.
	Logtail []WorkerLogDestinationLogtailObservation `json:"logtail,omitempty" tf:"logtail,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// Name of the log destination
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// OpenSearch configuration.
	OpenSearch []WorkerLogDestinationOpenSearchObservation `json:"openSearch,omitempty" tf:"open_search,omitempty"`

	// Papertrail configuration.
	// Papertrail configuration.
	Papertrail []WorkerLogDestinationPapertrailObservation `json:"papertrail,omitempty" tf:"papertrail,omitempty"`
}

type WorkerLogDestinationOpenSearchBasicAuthInitParameters struct {

	// Password for user defined in User. Is required when endpoint is set. Cannot be set if using a DigitalOcean DBaaS OpenSearch cluster.
	// Password for basic authentication.
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Username to authenticate with. Only required when endpoint is set. Defaults to doadmin when cluster_name is set.
	// user for basic authentication.
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type WorkerLogDestinationOpenSearchBasicAuthObservation struct {

	// Username to authenticate with. Only required when endpoint is set. Defaults to doadmin when cluster_name is set.
	// user for basic authentication.
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type WorkerLogDestinationOpenSearchBasicAuthParameters struct {

	// Password for user defined in User. Is required when endpoint is set. Cannot be set if using a DigitalOcean DBaaS OpenSearch cluster.
	// Password for basic authentication.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Username to authenticate with. Only required when endpoint is set. Defaults to doadmin when cluster_name is set.
	// user for basic authentication.
	// +kubebuilder:validation:Optional
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type WorkerLogDestinationOpenSearchInitParameters struct {

	// OpenSearch basic auth
	// Basic authentication details.
	BasicAuth []WorkerLogDestinationOpenSearchBasicAuthInitParameters `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// OpenSearch cluster name.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Papertrail syslog endpoint.
	// OpenSearch endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The index name to use for the logs. If not set, the default index name is logs.
	// OpenSearch index name.
	IndexName *string `json:"indexName,omitempty" tf:"index_name,omitempty"`
}

type WorkerLogDestinationOpenSearchObservation struct {

	// OpenSearch basic auth
	// Basic authentication details.
	BasicAuth []WorkerLogDestinationOpenSearchBasicAuthObservation `json:"basicAuth,omitempty" tf:"basic_auth,omitempty"`

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// OpenSearch cluster name.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Papertrail syslog endpoint.
	// OpenSearch endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The index name to use for the logs. If not set, the default index name is logs.
	// OpenSearch index name.
	IndexName *string `json:"indexName,omitempty" tf:"index_name,omitempty"`
}

type WorkerLogDestinationOpenSearchParameters struct {

	// OpenSearch basic auth
	// Basic authentication details.
	// +kubebuilder:validation:Optional
	BasicAuth []WorkerLogDestinationOpenSearchBasicAuthParameters `json:"basicAuth" tf:"basic_auth,omitempty"`

	// The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination. Cannot be specified if endpoint is also specified.
	// OpenSearch cluster name.
	// +kubebuilder:validation:Optional
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Papertrail syslog endpoint.
	// OpenSearch endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The index name to use for the logs. If not set, the default index name is logs.
	// OpenSearch index name.
	// +kubebuilder:validation:Optional
	IndexName *string `json:"indexName,omitempty" tf:"index_name,omitempty"`
}

type WorkerLogDestinationPapertrailInitParameters struct {

	// Papertrail syslog endpoint.
	// Papertrail syslog endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type WorkerLogDestinationPapertrailObservation struct {

	// Papertrail syslog endpoint.
	// Papertrail syslog endpoint.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
}

type WorkerLogDestinationPapertrailParameters struct {

	// Papertrail syslog endpoint.
	// Papertrail syslog endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint" tf:"endpoint,omitempty"`
}

type WorkerLogDestinationParameters struct {

	// Datadog configuration.
	// Datadog configuration.
	// +kubebuilder:validation:Optional
	Datadog []WorkerLogDestinationDatadogParameters `json:"datadog,omitempty" tf:"datadog,omitempty"`

	// Logtail configuration.
	// Logtail configuration.
	// +kubebuilder:validation:Optional
	Logtail []WorkerLogDestinationLogtailParameters `json:"logtail,omitempty" tf:"logtail,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// Name of the log destination
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// OpenSearch configuration.
	// +kubebuilder:validation:Optional
	OpenSearch []WorkerLogDestinationOpenSearchParameters `json:"openSearch,omitempty" tf:"open_search,omitempty"`

	// Papertrail configuration.
	// Papertrail configuration.
	// +kubebuilder:validation:Optional
	Papertrail []WorkerLogDestinationPapertrailParameters `json:"papertrail,omitempty" tf:"papertrail,omitempty"`
}

type WorkerObservation struct {

	// Describes an alert policy for the app.
	// Alert policies for the app component
	Alert []WorkerAlertObservation `json:"alert,omitempty" tf:"alert,omitempty"`

	// An optional build command to run while building this component from source.
	// An optional build command to run while building this component from source.
	BuildCommand *string `json:"buildCommand,omitempty" tf:"build_command,omitempty"`

	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `json:"dockerfilePath,omitempty" tf:"dockerfile_path,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	Env []WorkerEnvObservation `json:"env,omitempty" tf:"env,omitempty"`

	// An environment slug describing the type of this app.
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `json:"environmentSlug,omitempty" tf:"environment_slug,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	Git []WorkerGitObservation `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Github []WorkerGithubObservation `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	Gitlab []WorkerGitlabObservation `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// An image to use as the component's source. Only one of git, github, gitlab, or image may be set.
	Image []WorkerImageObservation `json:"image,omitempty" tf:"image,omitempty"`

	// The amount of instances that this component should be scaled to.
	// The amount of instances that this component should be scaled to.
	InstanceCount *float64 `json:"instanceCount,omitempty" tf:"instance_count,omitempty"`

	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be found with the API or using the doctl CLI (doctl apps tier instance-size list). Default: basic-xxs
	// The instance size to use for this component.
	InstanceSizeSlug *string `json:"instanceSizeSlug,omitempty" tf:"instance_size_slug,omitempty"`

	// Describes a log forwarding destination.
	// Logs
	LogDestination []WorkerLogDestinationObservation `json:"logDestination,omitempty" tf:"log_destination,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An optional run command to override the component's default.
	// An optional run command to override the component's default.
	RunCommand *string `json:"runCommand,omitempty" tf:"run_command,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

type WorkerParameters struct {

	// Describes an alert policy for the app.
	// Alert policies for the app component
	// +kubebuilder:validation:Optional
	Alert []WorkerAlertParameters `json:"alert,omitempty" tf:"alert,omitempty"`

	// An optional build command to run while building this component from source.
	// An optional build command to run while building this component from source.
	// +kubebuilder:validation:Optional
	BuildCommand *string `json:"buildCommand,omitempty" tf:"build_command,omitempty"`

	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	// +kubebuilder:validation:Optional
	DockerfilePath *string `json:"dockerfilePath,omitempty" tf:"dockerfile_path,omitempty"`

	// Describes an app-wide environment variable made available to all components.
	// +kubebuilder:validation:Optional
	Env []WorkerEnvParameters `json:"env,omitempty" tf:"env,omitempty"`

	// An environment slug describing the type of this app.
	// An environment slug describing the type of this app.
	// +kubebuilder:validation:Optional
	EnvironmentSlug *string `json:"environmentSlug,omitempty" tf:"environment_slug,omitempty"`

	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication. Only one of git, github or gitlab may be set
	// +kubebuilder:validation:Optional
	Git []WorkerGitParameters `json:"git,omitempty" tf:"git,omitempty"`

	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Github []WorkerGithubParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have access to the repository. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Gitlab []WorkerGitlabParameters `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// An image to use as the component's source. Only one of git, github, gitlab, or image may be set.
	// +kubebuilder:validation:Optional
	Image []WorkerImageParameters `json:"image,omitempty" tf:"image,omitempty"`

	// The amount of instances that this component should be scaled to.
	// The amount of instances that this component should be scaled to.
	// +kubebuilder:validation:Optional
	InstanceCount *float64 `json:"instanceCount,omitempty" tf:"instance_count,omitempty"`

	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be found with the API or using the doctl CLI (doctl apps tier instance-size list). Default: basic-xxs
	// The instance size to use for this component.
	// +kubebuilder:validation:Optional
	InstanceSizeSlug *string `json:"instanceSizeSlug,omitempty" tf:"instance_size_slug,omitempty"`

	// Describes a log forwarding destination.
	// Logs
	// +kubebuilder:validation:Optional
	LogDestination []WorkerLogDestinationParameters `json:"logDestination,omitempty" tf:"log_destination,omitempty"`

	// The name of the app. Must be unique across all apps in the same account.
	// The name of the component
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// An optional run command to override the component's default.
	// An optional run command to override the component's default.
	// +kubebuilder:validation:Optional
	RunCommand *string `json:"runCommand,omitempty" tf:"run_command,omitempty"`

	// An optional path to the working directory to use for the build.
	// An optional path to the working directory to use for the build.
	// +kubebuilder:validation:Optional
	SourceDir *string `json:"sourceDir,omitempty" tf:"source_dir,omitempty"`
}

// AppSpec defines the desired state of App
type AppSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AppParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AppInitParameters `json:"initProvider,omitempty"`
}

// AppStatus defines the observed state of App.
type AppStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AppObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// App is the Schema for the Apps API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,do}
type App struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppSpec   `json:"spec"`
	Status            AppStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppList contains a list of Apps
type AppList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []App `json:"items"`
}

// Repository type metadata.
var (
	App_Kind             = "App"
	App_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: App_Kind}.String()
	App_KindAPIVersion   = App_Kind + "." + CRDGroupVersion.String()
	App_GroupVersionKind = CRDGroupVersion.WithKind(App_Kind)
)

func init() {
	SchemeBuilder.Register(&App{}, &AppList{})
}
