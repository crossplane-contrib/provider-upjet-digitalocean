---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: clusters.database.digitalocean.crossplane.io
spec:
  group: database.digitalocean.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - do
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  backupRestore:
                    description: Create a new database cluster based on a backup of
                      an existing cluster.
                    items:
                      properties:
                        backupCreatedAt:
                          description: The timestamp of an existing database cluster
                            backup in ISO8601 combined date and time format. The most
                            recent backup will be used if excluded.
                          type: string
                        databaseName:
                          description: The name of an existing database cluster from
                            which the backup will be restored.
                          type: string
                      type: object
                    type: array
                  engine:
                    description: Database engine used by the cluster (ex. pg for PostreSQL,
                      mysql for MySQL, redis for Redis, mongodb for MongoDB, or kafka
                      for Kafka).
                    type: string
                  evictionPolicy:
                    description: 'A string specifying the eviction policy for a Redis
                      cluster. Valid values are: noeviction, allkeys_lru, allkeys_random,
                      volatile_lru, volatile_random, or volatile_ttl.'
                    type: string
                  maintenanceWindow:
                    description: Defines when the automatic maintenance should be
                      performed for the database cluster.
                    items:
                      properties:
                        day:
                          description: The day of the week on which to apply maintenance
                            updates.
                          type: string
                        hour:
                          description: The hour in UTC at which maintenance updates
                            will be applied in 24 hour format.
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name of the database cluster.
                    type: string
                  nodeCount:
                    description: Number of nodes that will be included in the cluster.
                      For kafka clusters, this must be 3.
                    type: number
                  privateNetworkUuid:
                    description: The ID of the VPC where the database cluster will
                      be located.
                    type: string
                  privateNetworkUuidRef:
                    description: Reference to a VPC in networking to populate privateNetworkUuid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  privateNetworkUuidSelector:
                    description: Selector for a VPC in networking to populate privateNetworkUuid.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  projectId:
                    description: The ID of the project that the database cluster is
                      assigned to. If excluded when creating a new database cluster,
                      it will be assigned to your default project.
                    type: string
                  projectIdRef:
                    description: Reference to a Project in project to populate projectId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectIdSelector:
                    description: Selector for a Project in project to populate projectId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  region:
                    description: DigitalOcean region where the cluster will reside.
                    type: string
                  size:
                    description: Database Droplet size associated with the cluster
                      (ex. db-s-1vcpu-1gb). See here for a list of valid size slugs.
                    type: string
                  sqlMode:
                    description: A comma separated string specifying the  SQL modes
                      for a MySQL cluster.
                    type: string
                  storageSizeMib:
                    description: Defines the disk size, in MiB, allocated to the cluster.
                      This can be adjusted on MySQL and PostreSQL clusters based on
                      predefined ranges for each slug/droplet size.
                    type: string
                  tags:
                    description: A list of tag names to be applied to the database
                      cluster.
                    items:
                      type: string
                    type: array
                  version:
                    description: Engine version used by the cluster (ex. 14 for PostgreSQL
                      14). When this value is changed, a call to the Upgrade major
                      Version for a Database API operation is made with the new version.
                    type: string
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  backupRestore:
                    description: Create a new database cluster based on a backup of
                      an existing cluster.
                    items:
                      properties:
                        backupCreatedAt:
                          description: The timestamp of an existing database cluster
                            backup in ISO8601 combined date and time format. The most
                            recent backup will be used if excluded.
                          type: string
                        databaseName:
                          description: The name of an existing database cluster from
                            which the backup will be restored.
                          type: string
                      type: object
                    type: array
                  engine:
                    description: Database engine used by the cluster (ex. pg for PostreSQL,
                      mysql for MySQL, redis for Redis, mongodb for MongoDB, or kafka
                      for Kafka).
                    type: string
                  evictionPolicy:
                    description: 'A string specifying the eviction policy for a Redis
                      cluster. Valid values are: noeviction, allkeys_lru, allkeys_random,
                      volatile_lru, volatile_random, or volatile_ttl.'
                    type: string
                  maintenanceWindow:
                    description: Defines when the automatic maintenance should be
                      performed for the database cluster.
                    items:
                      properties:
                        day:
                          description: The day of the week on which to apply maintenance
                            updates.
                          type: string
                        hour:
                          description: The hour in UTC at which maintenance updates
                            will be applied in 24 hour format.
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name of the database cluster.
                    type: string
                  nodeCount:
                    description: Number of nodes that will be included in the cluster.
                      For kafka clusters, this must be 3.
                    type: number
                  region:
                    description: DigitalOcean region where the cluster will reside.
                    type: string
                  size:
                    description: Database Droplet size associated with the cluster
                      (ex. db-s-1vcpu-1gb). See here for a list of valid size slugs.
                    type: string
                  sqlMode:
                    description: A comma separated string specifying the  SQL modes
                      for a MySQL cluster.
                    type: string
                  storageSizeMib:
                    description: Defines the disk size, in MiB, allocated to the cluster.
                      This can be adjusted on MySQL and PostreSQL clusters based on
                      predefined ranges for each slug/droplet size.
                    type: string
                  tags:
                    description: A list of tag names to be applied to the database
                      cluster.
                    items:
                      type: string
                    type: array
                  version:
                    description: Engine version used by the cluster (ex. 14 for PostgreSQL
                      14). When this value is changed, a call to the Upgrade major
                      Version for a Database API operation is made with the new version.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.engine is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.engine)
                || (has(self.initProvider) && has(self.initProvider.engine))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.nodeCount is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.nodeCount)
                || (has(self.initProvider) && has(self.initProvider.nodeCount))'
            - message: spec.forProvider.region is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.region)
                || (has(self.initProvider) && has(self.initProvider.region))'
            - message: spec.forProvider.size is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.size)
                || (has(self.initProvider) && has(self.initProvider.size))'
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  backupRestore:
                    description: Create a new database cluster based on a backup of
                      an existing cluster.
                    items:
                      properties:
                        backupCreatedAt:
                          description: The timestamp of an existing database cluster
                            backup in ISO8601 combined date and time format. The most
                            recent backup will be used if excluded.
                          type: string
                        databaseName:
                          description: The name of an existing database cluster from
                            which the backup will be restored.
                          type: string
                      type: object
                    type: array
                  database:
                    description: Name of the cluster's default database.
                    type: string
                  engine:
                    description: Database engine used by the cluster (ex. pg for PostreSQL,
                      mysql for MySQL, redis for Redis, mongodb for MongoDB, or kafka
                      for Kafka).
                    type: string
                  evictionPolicy:
                    description: 'A string specifying the eviction policy for a Redis
                      cluster. Valid values are: noeviction, allkeys_lru, allkeys_random,
                      volatile_lru, volatile_random, or volatile_ttl.'
                    type: string
                  host:
                    description: Database cluster's hostname.
                    type: string
                  id:
                    description: The ID of the database cluster.
                    type: string
                  maintenanceWindow:
                    description: Defines when the automatic maintenance should be
                      performed for the database cluster.
                    items:
                      properties:
                        day:
                          description: The day of the week on which to apply maintenance
                            updates.
                          type: string
                        hour:
                          description: The hour in UTC at which maintenance updates
                            will be applied in 24 hour format.
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name of the database cluster.
                    type: string
                  nodeCount:
                    description: Number of nodes that will be included in the cluster.
                      For kafka clusters, this must be 3.
                    type: number
                  port:
                    description: Network port that the database cluster is listening
                      on.
                    type: number
                  privateHost:
                    description: Same as host, but only accessible from resources
                      within the account and in the same region.
                    type: string
                  privateNetworkUuid:
                    description: The ID of the VPC where the database cluster will
                      be located.
                    type: string
                  projectId:
                    description: The ID of the project that the database cluster is
                      assigned to. If excluded when creating a new database cluster,
                      it will be assigned to your default project.
                    type: string
                  region:
                    description: DigitalOcean region where the cluster will reside.
                    type: string
                  size:
                    description: Database Droplet size associated with the cluster
                      (ex. db-s-1vcpu-1gb). See here for a list of valid size slugs.
                    type: string
                  sqlMode:
                    description: A comma separated string specifying the  SQL modes
                      for a MySQL cluster.
                    type: string
                  storageSizeMib:
                    description: Defines the disk size, in MiB, allocated to the cluster.
                      This can be adjusted on MySQL and PostreSQL clusters based on
                      predefined ranges for each slug/droplet size.
                    type: string
                  tags:
                    description: A list of tag names to be applied to the database
                      cluster.
                    items:
                      type: string
                    type: array
                  urn:
                    description: The uniform resource name of the database cluster.
                    type: string
                  user:
                    description: Username for the cluster's default user.
                    type: string
                  version:
                    description: Engine version used by the cluster (ex. 14 for PostgreSQL
                      14). When this value is changed, a call to the Upgrade major
                      Version for a Database API operation is made with the new version.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
