---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: kafkatopics.database.digitalocean.crossplane.io
spec:
  group: database.digitalocean.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - do
    kind: KafkaTopic
    listKind: KafkaTopicList
    plural: kafkatopics
    singular: kafkatopic
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KafkaTopic is the Schema for the KafkaTopics API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaTopicSpec defines the desired state of KafkaTopic
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  clusterId:
                    description: 'The ID of the source database cluster. Note: This
                      must be a Kafka cluster.'
                    type: string
                  clusterIdRef:
                    description: Reference to a Cluster to populate clusterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterIdSelector:
                    description: Selector for a Cluster to populate clusterId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  config:
                    description: A set of advanced configuration parameters. Defaults
                      will be set for any of the parameters that are not included.
                      The config block is documented below.
                    items:
                      properties:
                        cleanupPolicy:
                          description: The topic cleanup policy that decribes whether
                            messages should be deleted, compacted, or both when retention
                            policies are violated. This may be one of "delete", "compact",
                            or "compact_delete".
                          type: string
                        compressionType:
                          description: The topic compression codecs used for a given
                            topic. This may be one of "uncompressed", "gzip", "snappy",
                            "lz4", "producer", "zstd". "uncompressed" indicates that
                            there is no compression and "producer" retains the original
                            compression codec set by the producer.
                          type: string
                        deleteRetentionMs:
                          description: The amount of time, in ms, that deleted records
                            are retained.
                          type: string
                        fileDeleteDelayMs:
                          description: The amount of time, in ms, to wait before deleting
                            a topic log segment from the filesystem.
                          type: string
                        flushMessages:
                          description: The number of messages accumulated on a topic
                            partition before they are flushed to disk.
                          type: string
                        flushMs:
                          description: The maximum time, in ms, that a topic is kept
                            in memory before being flushed to disk.
                          type: string
                        indexIntervalBytes:
                          description: The interval, in bytes, in which entries are
                            added to the offset index.
                          type: string
                        maxCompactionLagMs:
                          description: The maximum time, in ms, that a particular
                            message will remain uncompacted. This will not apply if
                            the compression_type is set to "uncompressed" or it is
                            set to producer and the producer is not using compression.
                          type: string
                        maxMessageBytes:
                          description: The maximum size, in bytes, of a message.
                          type: string
                        messageDownConversionEnable:
                          description: Determines whether down-conversion of message
                            formats for consumers is enabled.
                          type: boolean
                        messageFormatVersion:
                          description: The version of the inter-broker protocol that
                            will be used. This may be one of "0.8.0", "0.8.1", "0.8.2",
                            "0.9.0", "0.10.0", "0.10.0-IV0", "0.10.0-IV1", "0.10.1",
                            "0.10.1-IV0", "0.10.1-IV1", "0.10.1-IV2", "0.10.2", "0.10.2-IV0",
                            "0.11.0", "0.11.0-IV0", "0.11.0-IV1", "0.11.0-IV2", "1.0",
                            "1.0-IV0", "1.1", "1.1-IV0", "2.0", "2.0-IV0", "2.0-IV1",
                            "2.1", "2.1-IV0", "2.1-IV1", "2.1-IV2", "2.2", "2.2-IV0",
                            "2.2-IV1", "2.3", "2.3-IV0", "2.3-IV1", "2.4", "2.4-IV0",
                            "2.4-IV1", "2.5", "2.5-IV0", "2.6", "2.6-IV0", "2.7",
                            "2.7-IV0", "2.7-IV1", "2.7-IV2", "2.8", "2.8-IV0", "2.8-IV1",
                            "3.0", "3.0-IV0", "3.0-IV1", "3.1", "3.1-IV0", "3.2",
                            "3.2-IV0", "3.3", "3.3-IV0", "3.3-IV1", "3.3-IV2", "3.3-IV3",
                            "3.4", "3.4-IV0", "3.5", "3.5-IV0", "3.5-IV1", "3.5-IV2",
                            "3.6", "3.6-IV0", "3.6-IV1", "3.6-IV2".
                          type: string
                        messageTimestampDifferenceMaxMs:
                          description: The maximum difference, in ms, between the
                            timestamp specific in a message and when the broker receives
                            the message.
                          type: string
                        messageTimestampType:
                          description: Specifies which timestamp to use for the message.
                            This may be one of "create_time" or "log_append_time".
                          type: string
                        minCleanableDirtyRatio:
                          description: A scale between 0.0 and 1.0 which controls
                            the frequency of the compactor. Larger values mean more
                            frequent compactions. This is often paired with max_compaction_lag_ms
                            to control the compactor frequency.
                          type: number
                        minCompactionLagMs:
                          type: string
                        minInsyncReplicas:
                          description: The number of replicas that must acknowledge
                            a write before it is considered successful. -1 is a special
                            setting to indicate that all nodes must ack a message
                            before a write is considered successful. Default is 1,
                            indicating at least 1 replica must acknowledge a write
                            to be considered successful.
                          type: number
                        preallocate:
                          description: Determines whether to preallocate a file on
                            disk when creating a new log segment within a topic.
                          type: boolean
                        retentionBytes:
                          description: The maximum size, in bytes, of a topic before
                            messages are deleted. -1 is a special setting indicating
                            that this setting has no limit.
                          type: string
                        retentionMs:
                          description: The maximum time, in ms, that a topic log file
                            is retained before deleting it. -1 is a special setting
                            indicating that this setting has no limit.
                          type: string
                        segmentBytes:
                          description: The maximum size, in bytes, of a single topic
                            log file.
                          type: string
                        segmentIndexBytes:
                          description: The maximum size, in bytes, of the offset index.
                          type: string
                        segmentJitterMs:
                          description: The maximum time, in ms, subtracted from the
                            scheduled segment disk flush time to avoid the thundering
                            herd problem for segment flushing.
                          type: string
                        segmentMs:
                          description: The maximum time, in ms, before the topic log
                            will flush to disk.
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name for the topic.
                    type: string
                  partitionCount:
                    description: The number of partitions for the topic. Default and
                      minimum set at 3, maximum is 2048.
                    type: number
                  replicationFactor:
                    description: The number of nodes that topics are replicated across.
                      Default and minimum set at 2, maximum is the number of nodes
                      in the cluster.
                    type: number
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  config:
                    description: A set of advanced configuration parameters. Defaults
                      will be set for any of the parameters that are not included.
                      The config block is documented below.
                    items:
                      properties:
                        cleanupPolicy:
                          description: The topic cleanup policy that decribes whether
                            messages should be deleted, compacted, or both when retention
                            policies are violated. This may be one of "delete", "compact",
                            or "compact_delete".
                          type: string
                        compressionType:
                          description: The topic compression codecs used for a given
                            topic. This may be one of "uncompressed", "gzip", "snappy",
                            "lz4", "producer", "zstd". "uncompressed" indicates that
                            there is no compression and "producer" retains the original
                            compression codec set by the producer.
                          type: string
                        deleteRetentionMs:
                          description: The amount of time, in ms, that deleted records
                            are retained.
                          type: string
                        fileDeleteDelayMs:
                          description: The amount of time, in ms, to wait before deleting
                            a topic log segment from the filesystem.
                          type: string
                        flushMessages:
                          description: The number of messages accumulated on a topic
                            partition before they are flushed to disk.
                          type: string
                        flushMs:
                          description: The maximum time, in ms, that a topic is kept
                            in memory before being flushed to disk.
                          type: string
                        indexIntervalBytes:
                          description: The interval, in bytes, in which entries are
                            added to the offset index.
                          type: string
                        maxCompactionLagMs:
                          description: The maximum time, in ms, that a particular
                            message will remain uncompacted. This will not apply if
                            the compression_type is set to "uncompressed" or it is
                            set to producer and the producer is not using compression.
                          type: string
                        maxMessageBytes:
                          description: The maximum size, in bytes, of a message.
                          type: string
                        messageDownConversionEnable:
                          description: Determines whether down-conversion of message
                            formats for consumers is enabled.
                          type: boolean
                        messageFormatVersion:
                          description: The version of the inter-broker protocol that
                            will be used. This may be one of "0.8.0", "0.8.1", "0.8.2",
                            "0.9.0", "0.10.0", "0.10.0-IV0", "0.10.0-IV1", "0.10.1",
                            "0.10.1-IV0", "0.10.1-IV1", "0.10.1-IV2", "0.10.2", "0.10.2-IV0",
                            "0.11.0", "0.11.0-IV0", "0.11.0-IV1", "0.11.0-IV2", "1.0",
                            "1.0-IV0", "1.1", "1.1-IV0", "2.0", "2.0-IV0", "2.0-IV1",
                            "2.1", "2.1-IV0", "2.1-IV1", "2.1-IV2", "2.2", "2.2-IV0",
                            "2.2-IV1", "2.3", "2.3-IV0", "2.3-IV1", "2.4", "2.4-IV0",
                            "2.4-IV1", "2.5", "2.5-IV0", "2.6", "2.6-IV0", "2.7",
                            "2.7-IV0", "2.7-IV1", "2.7-IV2", "2.8", "2.8-IV0", "2.8-IV1",
                            "3.0", "3.0-IV0", "3.0-IV1", "3.1", "3.1-IV0", "3.2",
                            "3.2-IV0", "3.3", "3.3-IV0", "3.3-IV1", "3.3-IV2", "3.3-IV3",
                            "3.4", "3.4-IV0", "3.5", "3.5-IV0", "3.5-IV1", "3.5-IV2",
                            "3.6", "3.6-IV0", "3.6-IV1", "3.6-IV2".
                          type: string
                        messageTimestampDifferenceMaxMs:
                          description: The maximum difference, in ms, between the
                            timestamp specific in a message and when the broker receives
                            the message.
                          type: string
                        messageTimestampType:
                          description: Specifies which timestamp to use for the message.
                            This may be one of "create_time" or "log_append_time".
                          type: string
                        minCleanableDirtyRatio:
                          description: A scale between 0.0 and 1.0 which controls
                            the frequency of the compactor. Larger values mean more
                            frequent compactions. This is often paired with max_compaction_lag_ms
                            to control the compactor frequency.
                          type: number
                        minCompactionLagMs:
                          type: string
                        minInsyncReplicas:
                          description: The number of replicas that must acknowledge
                            a write before it is considered successful. -1 is a special
                            setting to indicate that all nodes must ack a message
                            before a write is considered successful. Default is 1,
                            indicating at least 1 replica must acknowledge a write
                            to be considered successful.
                          type: number
                        preallocate:
                          description: Determines whether to preallocate a file on
                            disk when creating a new log segment within a topic.
                          type: boolean
                        retentionBytes:
                          description: The maximum size, in bytes, of a topic before
                            messages are deleted. -1 is a special setting indicating
                            that this setting has no limit.
                          type: string
                        retentionMs:
                          description: The maximum time, in ms, that a topic log file
                            is retained before deleting it. -1 is a special setting
                            indicating that this setting has no limit.
                          type: string
                        segmentBytes:
                          description: The maximum size, in bytes, of a single topic
                            log file.
                          type: string
                        segmentIndexBytes:
                          description: The maximum size, in bytes, of the offset index.
                          type: string
                        segmentJitterMs:
                          description: The maximum time, in ms, subtracted from the
                            scheduled segment disk flush time to avoid the thundering
                            herd problem for segment flushing.
                          type: string
                        segmentMs:
                          description: The maximum time, in ms, before the topic log
                            will flush to disk.
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name for the topic.
                    type: string
                  partitionCount:
                    description: The number of partitions for the topic. Default and
                      minimum set at 3, maximum is 2048.
                    type: number
                  replicationFactor:
                    description: The number of nodes that topics are replicated across.
                      Default and minimum set at 2, maximum is the number of nodes
                      in the cluster.
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: KafkaTopicStatus defines the observed state of KafkaTopic.
            properties:
              atProvider:
                properties:
                  clusterId:
                    description: 'The ID of the source database cluster. Note: This
                      must be a Kafka cluster.'
                    type: string
                  config:
                    description: A set of advanced configuration parameters. Defaults
                      will be set for any of the parameters that are not included.
                      The config block is documented below.
                    items:
                      properties:
                        cleanupPolicy:
                          description: The topic cleanup policy that decribes whether
                            messages should be deleted, compacted, or both when retention
                            policies are violated. This may be one of "delete", "compact",
                            or "compact_delete".
                          type: string
                        compressionType:
                          description: The topic compression codecs used for a given
                            topic. This may be one of "uncompressed", "gzip", "snappy",
                            "lz4", "producer", "zstd". "uncompressed" indicates that
                            there is no compression and "producer" retains the original
                            compression codec set by the producer.
                          type: string
                        deleteRetentionMs:
                          description: The amount of time, in ms, that deleted records
                            are retained.
                          type: string
                        fileDeleteDelayMs:
                          description: The amount of time, in ms, to wait before deleting
                            a topic log segment from the filesystem.
                          type: string
                        flushMessages:
                          description: The number of messages accumulated on a topic
                            partition before they are flushed to disk.
                          type: string
                        flushMs:
                          description: The maximum time, in ms, that a topic is kept
                            in memory before being flushed to disk.
                          type: string
                        indexIntervalBytes:
                          description: The interval, in bytes, in which entries are
                            added to the offset index.
                          type: string
                        maxCompactionLagMs:
                          description: The maximum time, in ms, that a particular
                            message will remain uncompacted. This will not apply if
                            the compression_type is set to "uncompressed" or it is
                            set to producer and the producer is not using compression.
                          type: string
                        maxMessageBytes:
                          description: The maximum size, in bytes, of a message.
                          type: string
                        messageDownConversionEnable:
                          description: Determines whether down-conversion of message
                            formats for consumers is enabled.
                          type: boolean
                        messageFormatVersion:
                          description: The version of the inter-broker protocol that
                            will be used. This may be one of "0.8.0", "0.8.1", "0.8.2",
                            "0.9.0", "0.10.0", "0.10.0-IV0", "0.10.0-IV1", "0.10.1",
                            "0.10.1-IV0", "0.10.1-IV1", "0.10.1-IV2", "0.10.2", "0.10.2-IV0",
                            "0.11.0", "0.11.0-IV0", "0.11.0-IV1", "0.11.0-IV2", "1.0",
                            "1.0-IV0", "1.1", "1.1-IV0", "2.0", "2.0-IV0", "2.0-IV1",
                            "2.1", "2.1-IV0", "2.1-IV1", "2.1-IV2", "2.2", "2.2-IV0",
                            "2.2-IV1", "2.3", "2.3-IV0", "2.3-IV1", "2.4", "2.4-IV0",
                            "2.4-IV1", "2.5", "2.5-IV0", "2.6", "2.6-IV0", "2.7",
                            "2.7-IV0", "2.7-IV1", "2.7-IV2", "2.8", "2.8-IV0", "2.8-IV1",
                            "3.0", "3.0-IV0", "3.0-IV1", "3.1", "3.1-IV0", "3.2",
                            "3.2-IV0", "3.3", "3.3-IV0", "3.3-IV1", "3.3-IV2", "3.3-IV3",
                            "3.4", "3.4-IV0", "3.5", "3.5-IV0", "3.5-IV1", "3.5-IV2",
                            "3.6", "3.6-IV0", "3.6-IV1", "3.6-IV2".
                          type: string
                        messageTimestampDifferenceMaxMs:
                          description: The maximum difference, in ms, between the
                            timestamp specific in a message and when the broker receives
                            the message.
                          type: string
                        messageTimestampType:
                          description: Specifies which timestamp to use for the message.
                            This may be one of "create_time" or "log_append_time".
                          type: string
                        minCleanableDirtyRatio:
                          description: A scale between 0.0 and 1.0 which controls
                            the frequency of the compactor. Larger values mean more
                            frequent compactions. This is often paired with max_compaction_lag_ms
                            to control the compactor frequency.
                          type: number
                        minCompactionLagMs:
                          type: string
                        minInsyncReplicas:
                          description: The number of replicas that must acknowledge
                            a write before it is considered successful. -1 is a special
                            setting to indicate that all nodes must ack a message
                            before a write is considered successful. Default is 1,
                            indicating at least 1 replica must acknowledge a write
                            to be considered successful.
                          type: number
                        preallocate:
                          description: Determines whether to preallocate a file on
                            disk when creating a new log segment within a topic.
                          type: boolean
                        retentionBytes:
                          description: The maximum size, in bytes, of a topic before
                            messages are deleted. -1 is a special setting indicating
                            that this setting has no limit.
                          type: string
                        retentionMs:
                          description: The maximum time, in ms, that a topic log file
                            is retained before deleting it. -1 is a special setting
                            indicating that this setting has no limit.
                          type: string
                        segmentBytes:
                          description: The maximum size, in bytes, of a single topic
                            log file.
                          type: string
                        segmentIndexBytes:
                          description: The maximum size, in bytes, of the offset index.
                          type: string
                        segmentJitterMs:
                          description: The maximum time, in ms, subtracted from the
                            scheduled segment disk flush time to avoid the thundering
                            herd problem for segment flushing.
                          type: string
                        segmentMs:
                          description: The maximum time, in ms, before the topic log
                            will flush to disk.
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  name:
                    description: The name for the topic.
                    type: string
                  partitionCount:
                    description: The number of partitions for the topic. Default and
                      minimum set at 3, maximum is 2048.
                    type: number
                  replicationFactor:
                    description: The number of nodes that topics are replicated across.
                      Default and minimum set at 2, maximum is the number of nodes
                      in the cluster.
                    type: number
                  state:
                    description: The current status of the topic. Possible values
                      are 'active', 'configuring', and 'deleting'.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
