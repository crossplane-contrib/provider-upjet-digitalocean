---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clusters.kubernetes.digitalocean.crossplane.io
spec:
  group: kubernetes.digitalocean.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - do
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoUpgrade:
                    description: A boolean value indicating whether the cluster will
                      be automatically upgraded to new patch releases during its maintenance
                      window.
                    type: boolean
                  destroyAllAssociatedResources:
                    description: Use with caution. When set to true, all associated
                      DigitalOcean resources created via the Kubernetes API (load
                      balancers, volumes, and volume snapshots) will be destroyed
                      along with the cluster when it is destroyed.
                    type: boolean
                  ha:
                    description: 'Enable/disable the high availability control plane
                      for a cluster. Once enabled for a cluster, high availability
                      cannot be disabled. Default: false'
                    type: boolean
                  maintenancePolicy:
                    description: A block representing the cluster's maintenance window.
                      Updates will be applied within this window. If not specified,
                      a default maintenance window will be chosen. auto_upgrade must
                      be set to true for this to have an effect.
                    items:
                      properties:
                        day:
                          description: The day of the maintenance window policy. May
                            be one of "monday" through "sunday", or "any" to indicate
                            an arbitrary week day.
                          type: string
                        startTime:
                          description: hour clock format / HH:MM notation (e.g., 15:00).
                          type: string
                      type: object
                    type: array
                  name:
                    description: A name for the Kubernetes cluster.
                    type: string
                  nodePool:
                    description: 'A block representing the cluster''s default node
                      pool. Additional node pools may be added to the cluster using
                      the digitalocean_kubernetes_node_pool resource. The following
                      arguments may be specified:'
                    items:
                      properties:
                        autoScale:
                          description: Enable auto-scaling of the number of nodes
                            in the node pool within the given min/max range.
                          type: boolean
                        labels:
                          additionalProperties:
                            type: string
                          description: A map of key/value pairs to apply to nodes
                            in the pool. The labels are exposed in the Kubernetes
                            API as labels in the metadata of the corresponding Node
                            resources.
                          type: object
                          x-kubernetes-map-type: granular
                        maxNodes:
                          description: If auto-scaling is enabled, this represents
                            the maximum number of nodes that the node pool can be
                            scaled up to.
                          type: number
                        minNodes:
                          description: If auto-scaling is enabled, this represents
                            the minimum number of nodes that the node pool can be
                            scaled down to.
                          type: number
                        name:
                          description: A name for the Kubernetes cluster.
                          type: string
                        nodeCount:
                          description: The number of Droplet instances in the node
                            pool. If auto-scaling is enabled, this should only be
                            set if the desired result is to explicitly reset the number
                            of nodes to this value. If auto-scaling is enabled, and
                            the node count is outside of the given min/max range,
                            it will use the min nodes value.
                          type: number
                        size:
                          description: The slug identifier for the type of Droplet
                            to be used as workers in the node pool.
                          type: string
                        tags:
                          description: A list of tag names applied to the node pool.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        taint:
                          description: 'A block representing a taint applied to all
                            nodes in the pool. Each taint exports the following attributes
                            (taints must be unique by key and effect pair):'
                          items:
                            properties:
                              effect:
                                description: 'How the node reacts to pods that it
                                  won''t tolerate. Available effect values are: "NoSchedule",
                                  "PreferNoSchedule", "NoExecute".'
                                type: string
                              key:
                                description: An arbitrary string. The "key" and "value"
                                  fields of the "taint" object form a key-value pair.
                                type: string
                              value:
                                description: An arbitrary string. The "key" and "value"
                                  fields of the "taint" object form a key-value pair.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  region:
                    description: The slug identifier for the region where the Kubernetes
                      cluster will be created.
                    type: string
                  registryIntegration:
                    description: 'Enables or disables the DigitalOcean container registry
                      integration for the cluster. This requires that a container
                      registry has first been created for the account. Default: false'
                    type: boolean
                  surgeUpgrade:
                    description: 'Enable/disable surge upgrades for a cluster. Default:
                      false'
                    type: boolean
                  tags:
                    description: A list of tag names applied to the node pool.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  version:
                    description: 'The slug identifier for the version of Kubernetes
                      used for the cluster. Use doctl to find the available versions
                      doctl kubernetes options versions. (Note: A cluster may only
                      be upgraded to newer versions in-place. If the version is decreased,
                      a new resource will be created.)'
                    type: string
                  vpcUuid:
                    description: The ID of the VPC where the Kubernetes cluster will
                      be located.
                    type: string
                  vpcUuidRef:
                    description: Reference to a VPC in vpc to populate vpcUuid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vpcUuidSelector:
                    description: Selector for a VPC in vpc to populate vpcUuid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  autoUpgrade:
                    description: A boolean value indicating whether the cluster will
                      be automatically upgraded to new patch releases during its maintenance
                      window.
                    type: boolean
                  destroyAllAssociatedResources:
                    description: Use with caution. When set to true, all associated
                      DigitalOcean resources created via the Kubernetes API (load
                      balancers, volumes, and volume snapshots) will be destroyed
                      along with the cluster when it is destroyed.
                    type: boolean
                  ha:
                    description: 'Enable/disable the high availability control plane
                      for a cluster. Once enabled for a cluster, high availability
                      cannot be disabled. Default: false'
                    type: boolean
                  maintenancePolicy:
                    description: A block representing the cluster's maintenance window.
                      Updates will be applied within this window. If not specified,
                      a default maintenance window will be chosen. auto_upgrade must
                      be set to true for this to have an effect.
                    items:
                      properties:
                        day:
                          description: The day of the maintenance window policy. May
                            be one of "monday" through "sunday", or "any" to indicate
                            an arbitrary week day.
                          type: string
                        startTime:
                          description: hour clock format / HH:MM notation (e.g., 15:00).
                          type: string
                      type: object
                    type: array
                  name:
                    description: A name for the Kubernetes cluster.
                    type: string
                  nodePool:
                    description: 'A block representing the cluster''s default node
                      pool. Additional node pools may be added to the cluster using
                      the digitalocean_kubernetes_node_pool resource. The following
                      arguments may be specified:'
                    items:
                      properties:
                        autoScale:
                          description: Enable auto-scaling of the number of nodes
                            in the node pool within the given min/max range.
                          type: boolean
                        labels:
                          additionalProperties:
                            type: string
                          description: A map of key/value pairs to apply to nodes
                            in the pool. The labels are exposed in the Kubernetes
                            API as labels in the metadata of the corresponding Node
                            resources.
                          type: object
                          x-kubernetes-map-type: granular
                        maxNodes:
                          description: If auto-scaling is enabled, this represents
                            the maximum number of nodes that the node pool can be
                            scaled up to.
                          type: number
                        minNodes:
                          description: If auto-scaling is enabled, this represents
                            the minimum number of nodes that the node pool can be
                            scaled down to.
                          type: number
                        name:
                          description: A name for the Kubernetes cluster.
                          type: string
                        nodeCount:
                          description: The number of Droplet instances in the node
                            pool. If auto-scaling is enabled, this should only be
                            set if the desired result is to explicitly reset the number
                            of nodes to this value. If auto-scaling is enabled, and
                            the node count is outside of the given min/max range,
                            it will use the min nodes value.
                          type: number
                        size:
                          description: The slug identifier for the type of Droplet
                            to be used as workers in the node pool.
                          type: string
                        tags:
                          description: A list of tag names applied to the node pool.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        taint:
                          description: 'A block representing a taint applied to all
                            nodes in the pool. Each taint exports the following attributes
                            (taints must be unique by key and effect pair):'
                          items:
                            properties:
                              effect:
                                description: 'How the node reacts to pods that it
                                  won''t tolerate. Available effect values are: "NoSchedule",
                                  "PreferNoSchedule", "NoExecute".'
                                type: string
                              key:
                                description: An arbitrary string. The "key" and "value"
                                  fields of the "taint" object form a key-value pair.
                                type: string
                              value:
                                description: An arbitrary string. The "key" and "value"
                                  fields of the "taint" object form a key-value pair.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  region:
                    description: The slug identifier for the region where the Kubernetes
                      cluster will be created.
                    type: string
                  registryIntegration:
                    description: 'Enables or disables the DigitalOcean container registry
                      integration for the cluster. This requires that a container
                      registry has first been created for the account. Default: false'
                    type: boolean
                  surgeUpgrade:
                    description: 'Enable/disable surge upgrades for a cluster. Default:
                      false'
                    type: boolean
                  tags:
                    description: A list of tag names applied to the node pool.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  version:
                    description: 'The slug identifier for the version of Kubernetes
                      used for the cluster. Use doctl to find the available versions
                      doctl kubernetes options versions. (Note: A cluster may only
                      be upgraded to newer versions in-place. If the version is decreased,
                      a new resource will be created.)'
                    type: string
                  vpcUuid:
                    description: The ID of the VPC where the Kubernetes cluster will
                      be located.
                    type: string
                  vpcUuidRef:
                    description: Reference to a VPC in vpc to populate vpcUuid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vpcUuidSelector:
                    description: Selector for a VPC in vpc to populate vpcUuid.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.nodePool is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.nodePool)
                || (has(self.initProvider) && has(self.initProvider.nodePool))'
            - message: spec.forProvider.region is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.region)
                || (has(self.initProvider) && has(self.initProvider.region))'
            - message: spec.forProvider.version is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.version)
                || (has(self.initProvider) && has(self.initProvider.version))'
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  autoUpgrade:
                    description: A boolean value indicating whether the cluster will
                      be automatically upgraded to new patch releases during its maintenance
                      window.
                    type: boolean
                  clusterSubnet:
                    description: The range of IP addresses in the overlay network
                      of the Kubernetes cluster.
                    type: string
                  createdAt:
                    description: The date and time when the Kubernetes cluster was
                      created.
                    type: string
                  destroyAllAssociatedResources:
                    description: Use with caution. When set to true, all associated
                      DigitalOcean resources created via the Kubernetes API (load
                      balancers, volumes, and volume snapshots) will be destroyed
                      along with the cluster when it is destroyed.
                    type: boolean
                  endpoint:
                    description: The base URL of the API server on the Kubernetes
                      master node.
                    type: string
                  ha:
                    description: 'Enable/disable the high availability control plane
                      for a cluster. Once enabled for a cluster, high availability
                      cannot be disabled. Default: false'
                    type: boolean
                  id:
                    description: A unique ID that can be used to identify and reference
                      a Kubernetes cluster.
                    type: string
                  ipv4Address:
                    description: The public IPv4 address of the Kubernetes master
                      node. This will not be set if high availability is configured
                      on the cluster (v1.21+)
                    type: string
                  maintenancePolicy:
                    description: A block representing the cluster's maintenance window.
                      Updates will be applied within this window. If not specified,
                      a default maintenance window will be chosen. auto_upgrade must
                      be set to true for this to have an effect.
                    items:
                      properties:
                        day:
                          description: The day of the maintenance window policy. May
                            be one of "monday" through "sunday", or "any" to indicate
                            an arbitrary week day.
                          type: string
                        duration:
                          description: A string denoting the duration of the service
                            window, e.g., "04:00".
                          type: string
                        startTime:
                          description: hour clock format / HH:MM notation (e.g., 15:00).
                          type: string
                      type: object
                    type: array
                  name:
                    description: A name for the Kubernetes cluster.
                    type: string
                  nodePool:
                    description: 'A block representing the cluster''s default node
                      pool. Additional node pools may be added to the cluster using
                      the digitalocean_kubernetes_node_pool resource. The following
                      arguments may be specified:'
                    items:
                      properties:
                        actualNodeCount:
                          description: A computed field representing the actual number
                            of nodes in the node pool, which is especially useful
                            when auto-scaling is enabled.
                          type: number
                        autoScale:
                          description: Enable auto-scaling of the number of nodes
                            in the node pool within the given min/max range.
                          type: boolean
                        id:
                          description: A unique ID that can be used to identify and
                            reference a Kubernetes cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: A map of key/value pairs to apply to nodes
                            in the pool. The labels are exposed in the Kubernetes
                            API as labels in the metadata of the corresponding Node
                            resources.
                          type: object
                          x-kubernetes-map-type: granular
                        maxNodes:
                          description: If auto-scaling is enabled, this represents
                            the maximum number of nodes that the node pool can be
                            scaled up to.
                          type: number
                        minNodes:
                          description: If auto-scaling is enabled, this represents
                            the minimum number of nodes that the node pool can be
                            scaled down to.
                          type: number
                        name:
                          description: A name for the Kubernetes cluster.
                          type: string
                        nodeCount:
                          description: The number of Droplet instances in the node
                            pool. If auto-scaling is enabled, this should only be
                            set if the desired result is to explicitly reset the number
                            of nodes to this value. If auto-scaling is enabled, and
                            the node count is outside of the given min/max range,
                            it will use the min nodes value.
                          type: number
                        nodes:
                          description: 'A list of nodes in the pool. Each node exports
                            the following attributes:'
                          items:
                            properties:
                              createdAt:
                                description: The date and time when the Kubernetes
                                  cluster was created.
                                type: string
                              dropletId:
                                description: The id of the node's droplet
                                type: string
                              id:
                                description: A unique ID that can be used to identify
                                  and reference a Kubernetes cluster.
                                type: string
                              name:
                                description: A name for the Kubernetes cluster.
                                type: string
                              status:
                                description: A string indicating the current status
                                  of the cluster. Potential values include running,
                                  provisioning, and errored.
                                type: string
                              updatedAt:
                                description: The date and time when the Kubernetes
                                  cluster was last updated.
                                type: string
                            type: object
                          type: array
                        size:
                          description: The slug identifier for the type of Droplet
                            to be used as workers in the node pool.
                          type: string
                        tags:
                          description: A list of tag names applied to the node pool.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        taint:
                          description: 'A block representing a taint applied to all
                            nodes in the pool. Each taint exports the following attributes
                            (taints must be unique by key and effect pair):'
                          items:
                            properties:
                              effect:
                                description: 'How the node reacts to pods that it
                                  won''t tolerate. Available effect values are: "NoSchedule",
                                  "PreferNoSchedule", "NoExecute".'
                                type: string
                              key:
                                description: An arbitrary string. The "key" and "value"
                                  fields of the "taint" object form a key-value pair.
                                type: string
                              value:
                                description: An arbitrary string. The "key" and "value"
                                  fields of the "taint" object form a key-value pair.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  region:
                    description: The slug identifier for the region where the Kubernetes
                      cluster will be created.
                    type: string
                  registryIntegration:
                    description: 'Enables or disables the DigitalOcean container registry
                      integration for the cluster. This requires that a container
                      registry has first been created for the account. Default: false'
                    type: boolean
                  serviceSubnet:
                    description: The range of assignable IP addresses for services
                      running in the Kubernetes cluster.
                    type: string
                  status:
                    description: A string indicating the current status of the cluster.
                      Potential values include running, provisioning, and errored.
                    type: string
                  surgeUpgrade:
                    description: 'Enable/disable surge upgrades for a cluster. Default:
                      false'
                    type: boolean
                  tags:
                    description: A list of tag names applied to the node pool.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  updatedAt:
                    description: The date and time when the Kubernetes cluster was
                      last updated.
                    type: string
                  urn:
                    description: The uniform resource name (URN) for the Kubernetes
                      cluster.
                    type: string
                  version:
                    description: 'The slug identifier for the version of Kubernetes
                      used for the cluster. Use doctl to find the available versions
                      doctl kubernetes options versions. (Note: A cluster may only
                      be upgraded to newer versions in-place. If the version is decreased,
                      a new resource will be created.)'
                    type: string
                  vpcUuid:
                    description: The ID of the VPC where the Kubernetes cluster will
                      be located.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
