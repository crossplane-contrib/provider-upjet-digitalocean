---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: loadbalancers.networking.digitalocean.crossplane.io
spec:
  group: networking.digitalocean.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - do
    kind: Loadbalancer
    listKind: LoadbalancerList
    plural: loadbalancers
    singular: loadbalancer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Loadbalancer is the Schema for the Loadbalancers API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LoadbalancerSpec defines the desired state of Loadbalancer
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  algorithm:
                    description: The load balancing algorithm used to determine which
                      backend Droplet will be selected by a client. It must be either
                      round_robin or least_connections. The default value is round_robin.
                    type: string
                  disableLetsEncryptDnsRecords:
                    description: A boolean value indicating whether to disable automatic
                      DNS record creation for Let's Encrypt certificates that are
                      added to the load balancer. Default value is false.
                    type: boolean
                  dropletIds:
                    description: A list of the IDs of each droplet to be attached
                      to the Load Balancer.
                    items:
                      type: number
                    type: array
                  dropletIdsRefs:
                    description: References to Droplet in droplet to populate dropletIds.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution
                                of this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which
                                will attempt to resolve the reference only when the
                                corresponding field is not present. Use 'Always' to
                                resolve the reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  dropletIdsSelector:
                    description: Selector for a list of Droplet in droplet to populate
                      dropletIds.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  dropletTag:
                    description: The name of a Droplet tag corresponding to Droplets
                      to be assigned to the Load Balancer.
                    type: string
                  enableBackendKeepalive:
                    description: A boolean value indicating whether HTTP keepalive
                      connections are maintained to target Droplets. Default value
                      is false.
                    type: boolean
                  enableProxyProtocol:
                    description: A boolean value indicating whether PROXY Protocol
                      should be used to pass information from connecting client requests
                      to the backend service. Default value is false.
                    type: boolean
                  firewall:
                    description: A block containing rules for allowing/denying traffic
                      to the Load Balancer. The firewall block is documented below.
                      Only 1 firewall is allowed.
                    items:
                      properties:
                        allow:
                          description: 'A list of strings describing allow rules.
                            Must be colon delimited strings of the form {type}:{source}
                            the rules for ALLOWING traffic to the LB (strings in the
                            form: ''ip:1.2.3.4'' or ''cidr:1.2.0.0/16'')'
                          items:
                            type: string
                          type: array
                        deny:
                          description: 'A list of strings describing deny rules. Must
                            be colon delimited strings of the form {type}:{source}
                            the rules for DENYING traffic to the LB (strings in the
                            form: ''ip:1.2.3.4'' or ''cidr:1.2.0.0/16'')'
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  forwardingRule:
                    description: A list of forwarding_rule to be assigned to the Load
                      Balancer. The forwarding_rule block is documented below.
                    items:
                      properties:
                        certificateId:
                          description: Deprecated The ID of the TLS certificate to
                            be used for SSL termination.
                          type: string
                        certificateName:
                          description: The unique name of the TLS certificate to be
                            used for SSL termination.
                          type: string
                        entryPort:
                          description: An integer representing the port on which the
                            Load Balancer instance will listen.
                          type: number
                        entryProtocol:
                          description: 'The protocol used for traffic to the Load
                            Balancer. The possible values are: http, https, http2,
                            http3, tcp, or udp.'
                          type: string
                        targetPort:
                          description: An integer representing the port on the backend
                            Droplets to which the Load Balancer will send traffic.
                          type: number
                        targetProtocol:
                          description: 'The protocol used for traffic from the Load
                            Balancer to the backend Droplets. The possible values
                            are: http, https, http2, tcp, or udp.'
                          type: string
                        tlsPassthrough:
                          description: A boolean value indicating whether SSL encrypted
                            traffic will be passed through to the backend Droplets.
                            The default value is false.
                          type: boolean
                      type: object
                    type: array
                  healthcheck:
                    description: A healthcheck block to be assigned to the Load Balancer.
                      The healthcheck block is documented below. Only 1 healthcheck
                      is allowed.
                    items:
                      properties:
                        checkIntervalSeconds:
                          description: The number of seconds between two consecutive
                            health checks. If not specified, the default value is
                            10.
                          type: number
                        healthyThreshold:
                          description: The number of times a health check must pass
                            for a backend Droplet to be marked "healthy" and be re-added
                            to the pool. If not specified, the default value is 5.
                          type: number
                        path:
                          description: The path on the backend Droplets to which the
                            Load Balancer instance will send a request.
                          type: string
                        port:
                          description: An integer representing the port on the backend
                            Droplets on which the health check will attempt a connection.
                          type: number
                        protocol:
                          description: The protocol used for health checks sent to
                            the backend Droplets. The possible values are http, https
                            or tcp.
                          type: string
                        responseTimeoutSeconds:
                          description: The number of seconds the Load Balancer instance
                            will wait for a response until marking a health check
                            as failed. If not specified, the default value is 5.
                          type: number
                        unhealthyThreshold:
                          description: The number of times a health check must fail
                            for a backend Droplet to be marked "unhealthy" and be
                            removed from the pool. If not specified, the default value
                            is 3.
                          type: number
                      type: object
                    type: array
                  httpIdleTimeoutSeconds:
                    description: Specifies the idle timeout for HTTPS connections
                      on the load balancer in seconds.
                    type: number
                  name:
                    description: The Load Balancer name
                    type: string
                  projectId:
                    description: The ID of the project that the load balancer is associated
                      with. If no ID is provided at creation, the load balancer associates
                      with the user's default project.
                    type: string
                  redirectHttpToHttps:
                    description: A boolean value indicating whether HTTP requests
                      to the Load Balancer on port 80 will be redirected to HTTPS
                      on port 443. Default value is false.
                    type: boolean
                  region:
                    description: The region to start in
                    type: string
                  size:
                    description: The size of the Load Balancer. It must be either
                      lb-small, lb-medium, or lb-large. Defaults to lb-small. Only
                      one of size or size_unit may be provided.
                    type: string
                  sizeUnit:
                    description: The size of the Load Balancer. It must be in the
                      range (1, 100). Defaults to 1. Only one of size or size_unit
                      may be provided.
                    type: number
                  stickySessions:
                    description: A sticky_sessions block to be assigned to the Load
                      Balancer. The sticky_sessions block is documented below. Only
                      1 sticky_sessions block is allowed.
                    items:
                      properties:
                        cookieName:
                          description: The name to be used for the cookie sent to
                            the client. This attribute is required when using cookies
                            for the sticky sessions type.
                          type: string
                        cookieTtlSeconds:
                          description: The number of seconds until the cookie set
                            by the Load Balancer expires. This attribute is required
                            when using cookies for the sticky sessions type.
                          type: number
                        type:
                          description: An attribute indicating how and if requests
                            from a client will be persistently served by the same
                            backend Droplet. The possible values are cookies or none.
                            If not specified, the default value is none.
                          type: string
                      type: object
                    type: array
                  type:
                    description: An attribute indicating how and if requests from
                      a client will be persistently served by the same backend Droplet.
                      The possible values are cookies or none. If not specified, the
                      default value is none. the type of the load balancer (GLOBAL
                      or REGIONAL)
                    type: string
                  vpcUuid:
                    description: The ID of the VPC where the load balancer will be
                      located.
                    type: string
                  vpcUuidRef:
                    description: Reference to a VPC in vpc to populate vpcUuid.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vpcUuidSelector:
                    description: Selector for a VPC in vpc to populate vpcUuid.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  algorithm:
                    description: The load balancing algorithm used to determine which
                      backend Droplet will be selected by a client. It must be either
                      round_robin or least_connections. The default value is round_robin.
                    type: string
                  disableLetsEncryptDnsRecords:
                    description: A boolean value indicating whether to disable automatic
                      DNS record creation for Let's Encrypt certificates that are
                      added to the load balancer. Default value is false.
                    type: boolean
                  dropletTag:
                    description: The name of a Droplet tag corresponding to Droplets
                      to be assigned to the Load Balancer.
                    type: string
                  enableBackendKeepalive:
                    description: A boolean value indicating whether HTTP keepalive
                      connections are maintained to target Droplets. Default value
                      is false.
                    type: boolean
                  enableProxyProtocol:
                    description: A boolean value indicating whether PROXY Protocol
                      should be used to pass information from connecting client requests
                      to the backend service. Default value is false.
                    type: boolean
                  firewall:
                    description: A block containing rules for allowing/denying traffic
                      to the Load Balancer. The firewall block is documented below.
                      Only 1 firewall is allowed.
                    items:
                      properties:
                        allow:
                          description: 'A list of strings describing allow rules.
                            Must be colon delimited strings of the form {type}:{source}
                            the rules for ALLOWING traffic to the LB (strings in the
                            form: ''ip:1.2.3.4'' or ''cidr:1.2.0.0/16'')'
                          items:
                            type: string
                          type: array
                        deny:
                          description: 'A list of strings describing deny rules. Must
                            be colon delimited strings of the form {type}:{source}
                            the rules for DENYING traffic to the LB (strings in the
                            form: ''ip:1.2.3.4'' or ''cidr:1.2.0.0/16'')'
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  forwardingRule:
                    description: A list of forwarding_rule to be assigned to the Load
                      Balancer. The forwarding_rule block is documented below.
                    items:
                      properties:
                        certificateId:
                          description: Deprecated The ID of the TLS certificate to
                            be used for SSL termination.
                          type: string
                        certificateName:
                          description: The unique name of the TLS certificate to be
                            used for SSL termination.
                          type: string
                        entryPort:
                          description: An integer representing the port on which the
                            Load Balancer instance will listen.
                          type: number
                        entryProtocol:
                          description: 'The protocol used for traffic to the Load
                            Balancer. The possible values are: http, https, http2,
                            http3, tcp, or udp.'
                          type: string
                        targetPort:
                          description: An integer representing the port on the backend
                            Droplets to which the Load Balancer will send traffic.
                          type: number
                        targetProtocol:
                          description: 'The protocol used for traffic from the Load
                            Balancer to the backend Droplets. The possible values
                            are: http, https, http2, tcp, or udp.'
                          type: string
                        tlsPassthrough:
                          description: A boolean value indicating whether SSL encrypted
                            traffic will be passed through to the backend Droplets.
                            The default value is false.
                          type: boolean
                      type: object
                    type: array
                  healthcheck:
                    description: A healthcheck block to be assigned to the Load Balancer.
                      The healthcheck block is documented below. Only 1 healthcheck
                      is allowed.
                    items:
                      properties:
                        checkIntervalSeconds:
                          description: The number of seconds between two consecutive
                            health checks. If not specified, the default value is
                            10.
                          type: number
                        healthyThreshold:
                          description: The number of times a health check must pass
                            for a backend Droplet to be marked "healthy" and be re-added
                            to the pool. If not specified, the default value is 5.
                          type: number
                        path:
                          description: The path on the backend Droplets to which the
                            Load Balancer instance will send a request.
                          type: string
                        port:
                          description: An integer representing the port on the backend
                            Droplets on which the health check will attempt a connection.
                          type: number
                        protocol:
                          description: The protocol used for health checks sent to
                            the backend Droplets. The possible values are http, https
                            or tcp.
                          type: string
                        responseTimeoutSeconds:
                          description: The number of seconds the Load Balancer instance
                            will wait for a response until marking a health check
                            as failed. If not specified, the default value is 5.
                          type: number
                        unhealthyThreshold:
                          description: The number of times a health check must fail
                            for a backend Droplet to be marked "unhealthy" and be
                            removed from the pool. If not specified, the default value
                            is 3.
                          type: number
                      type: object
                    type: array
                  httpIdleTimeoutSeconds:
                    description: Specifies the idle timeout for HTTPS connections
                      on the load balancer in seconds.
                    type: number
                  name:
                    description: The Load Balancer name
                    type: string
                  projectId:
                    description: The ID of the project that the load balancer is associated
                      with. If no ID is provided at creation, the load balancer associates
                      with the user's default project.
                    type: string
                  redirectHttpToHttps:
                    description: A boolean value indicating whether HTTP requests
                      to the Load Balancer on port 80 will be redirected to HTTPS
                      on port 443. Default value is false.
                    type: boolean
                  region:
                    description: The region to start in
                    type: string
                  size:
                    description: The size of the Load Balancer. It must be either
                      lb-small, lb-medium, or lb-large. Defaults to lb-small. Only
                      one of size or size_unit may be provided.
                    type: string
                  sizeUnit:
                    description: The size of the Load Balancer. It must be in the
                      range (1, 100). Defaults to 1. Only one of size or size_unit
                      may be provided.
                    type: number
                  stickySessions:
                    description: A sticky_sessions block to be assigned to the Load
                      Balancer. The sticky_sessions block is documented below. Only
                      1 sticky_sessions block is allowed.
                    items:
                      properties:
                        cookieName:
                          description: The name to be used for the cookie sent to
                            the client. This attribute is required when using cookies
                            for the sticky sessions type.
                          type: string
                        cookieTtlSeconds:
                          description: The number of seconds until the cookie set
                            by the Load Balancer expires. This attribute is required
                            when using cookies for the sticky sessions type.
                          type: number
                        type:
                          description: An attribute indicating how and if requests
                            from a client will be persistently served by the same
                            backend Droplet. The possible values are cookies or none.
                            If not specified, the default value is none.
                          type: string
                      type: object
                    type: array
                  type:
                    description: An attribute indicating how and if requests from
                      a client will be persistently served by the same backend Droplet.
                      The possible values are cookies or none. If not specified, the
                      default value is none. the type of the load balancer (GLOBAL
                      or REGIONAL)
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.forwardingRule is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.forwardingRule)
                || (has(self.initProvider) && has(self.initProvider.forwardingRule))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: LoadbalancerStatus defines the observed state of Loadbalancer.
            properties:
              atProvider:
                properties:
                  algorithm:
                    description: The load balancing algorithm used to determine which
                      backend Droplet will be selected by a client. It must be either
                      round_robin or least_connections. The default value is round_robin.
                    type: string
                  disableLetsEncryptDnsRecords:
                    description: A boolean value indicating whether to disable automatic
                      DNS record creation for Let's Encrypt certificates that are
                      added to the load balancer. Default value is false.
                    type: boolean
                  dropletIds:
                    description: A list of the IDs of each droplet to be attached
                      to the Load Balancer.
                    items:
                      type: number
                    type: array
                  dropletTag:
                    description: The name of a Droplet tag corresponding to Droplets
                      to be assigned to the Load Balancer.
                    type: string
                  enableBackendKeepalive:
                    description: A boolean value indicating whether HTTP keepalive
                      connections are maintained to target Droplets. Default value
                      is false.
                    type: boolean
                  enableProxyProtocol:
                    description: A boolean value indicating whether PROXY Protocol
                      should be used to pass information from connecting client requests
                      to the backend service. Default value is false.
                    type: boolean
                  firewall:
                    description: A block containing rules for allowing/denying traffic
                      to the Load Balancer. The firewall block is documented below.
                      Only 1 firewall is allowed.
                    items:
                      properties:
                        allow:
                          description: 'A list of strings describing allow rules.
                            Must be colon delimited strings of the form {type}:{source}
                            the rules for ALLOWING traffic to the LB (strings in the
                            form: ''ip:1.2.3.4'' or ''cidr:1.2.0.0/16'')'
                          items:
                            type: string
                          type: array
                        deny:
                          description: 'A list of strings describing deny rules. Must
                            be colon delimited strings of the form {type}:{source}
                            the rules for DENYING traffic to the LB (strings in the
                            form: ''ip:1.2.3.4'' or ''cidr:1.2.0.0/16'')'
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  forwardingRule:
                    description: A list of forwarding_rule to be assigned to the Load
                      Balancer. The forwarding_rule block is documented below.
                    items:
                      properties:
                        certificateId:
                          description: Deprecated The ID of the TLS certificate to
                            be used for SSL termination.
                          type: string
                        certificateName:
                          description: The unique name of the TLS certificate to be
                            used for SSL termination.
                          type: string
                        entryPort:
                          description: An integer representing the port on which the
                            Load Balancer instance will listen.
                          type: number
                        entryProtocol:
                          description: 'The protocol used for traffic to the Load
                            Balancer. The possible values are: http, https, http2,
                            http3, tcp, or udp.'
                          type: string
                        targetPort:
                          description: An integer representing the port on the backend
                            Droplets to which the Load Balancer will send traffic.
                          type: number
                        targetProtocol:
                          description: 'The protocol used for traffic from the Load
                            Balancer to the backend Droplets. The possible values
                            are: http, https, http2, tcp, or udp.'
                          type: string
                        tlsPassthrough:
                          description: A boolean value indicating whether SSL encrypted
                            traffic will be passed through to the backend Droplets.
                            The default value is false.
                          type: boolean
                      type: object
                    type: array
                  healthcheck:
                    description: A healthcheck block to be assigned to the Load Balancer.
                      The healthcheck block is documented below. Only 1 healthcheck
                      is allowed.
                    items:
                      properties:
                        checkIntervalSeconds:
                          description: The number of seconds between two consecutive
                            health checks. If not specified, the default value is
                            10.
                          type: number
                        healthyThreshold:
                          description: The number of times a health check must pass
                            for a backend Droplet to be marked "healthy" and be re-added
                            to the pool. If not specified, the default value is 5.
                          type: number
                        path:
                          description: The path on the backend Droplets to which the
                            Load Balancer instance will send a request.
                          type: string
                        port:
                          description: An integer representing the port on the backend
                            Droplets on which the health check will attempt a connection.
                          type: number
                        protocol:
                          description: The protocol used for health checks sent to
                            the backend Droplets. The possible values are http, https
                            or tcp.
                          type: string
                        responseTimeoutSeconds:
                          description: The number of seconds the Load Balancer instance
                            will wait for a response until marking a health check
                            as failed. If not specified, the default value is 5.
                          type: number
                        unhealthyThreshold:
                          description: The number of times a health check must fail
                            for a backend Droplet to be marked "unhealthy" and be
                            removed from the pool. If not specified, the default value
                            is 3.
                          type: number
                      type: object
                    type: array
                  httpIdleTimeoutSeconds:
                    description: Specifies the idle timeout for HTTPS connections
                      on the load balancer in seconds.
                    type: number
                  id:
                    description: The ID of the Load Balancer
                    type: string
                  ip:
                    description: The ip of the Load Balancer
                    type: string
                  name:
                    description: The Load Balancer name
                    type: string
                  projectId:
                    description: The ID of the project that the load balancer is associated
                      with. If no ID is provided at creation, the load balancer associates
                      with the user's default project.
                    type: string
                  redirectHttpToHttps:
                    description: A boolean value indicating whether HTTP requests
                      to the Load Balancer on port 80 will be redirected to HTTPS
                      on port 443. Default value is false.
                    type: boolean
                  region:
                    description: The region to start in
                    type: string
                  size:
                    description: The size of the Load Balancer. It must be either
                      lb-small, lb-medium, or lb-large. Defaults to lb-small. Only
                      one of size or size_unit may be provided.
                    type: string
                  sizeUnit:
                    description: The size of the Load Balancer. It must be in the
                      range (1, 100). Defaults to 1. Only one of size or size_unit
                      may be provided.
                    type: number
                  status:
                    type: string
                  stickySessions:
                    description: A sticky_sessions block to be assigned to the Load
                      Balancer. The sticky_sessions block is documented below. Only
                      1 sticky_sessions block is allowed.
                    items:
                      properties:
                        cookieName:
                          description: The name to be used for the cookie sent to
                            the client. This attribute is required when using cookies
                            for the sticky sessions type.
                          type: string
                        cookieTtlSeconds:
                          description: The number of seconds until the cookie set
                            by the Load Balancer expires. This attribute is required
                            when using cookies for the sticky sessions type.
                          type: number
                        type:
                          description: An attribute indicating how and if requests
                            from a client will be persistently served by the same
                            backend Droplet. The possible values are cookies or none.
                            If not specified, the default value is none.
                          type: string
                      type: object
                    type: array
                  type:
                    description: An attribute indicating how and if requests from
                      a client will be persistently served by the same backend Droplet.
                      The possible values are cookies or none. If not specified, the
                      default value is none. the type of the load balancer (GLOBAL
                      or REGIONAL)
                    type: string
                  urn:
                    description: The uniform resource name for the Load Balancer the
                      uniform resource name for the load balancer
                    type: string
                  vpcUuid:
                    description: The ID of the VPC where the load balancer will be
                      located.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
